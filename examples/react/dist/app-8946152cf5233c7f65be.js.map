{"version":3,"sources":["webpack:///app-8946152cf5233c7f65be.js","webpack:///./src/index.js","webpack:///./src/components/App.js","webpack:///./src/rollbar.js","webpack:///./~/rollbar-browser/dist/rollbar.umd.nojson.js"],"names":["webpackJsonp","0","module","exports","__webpack_require__","_interopRequireDefault","obj","__esModule","default","_react","_react2","_reactDom","_App","_App2","_rollbar","_rollbar2","window","Rollbar","rollbar","render","createElement","document","getElementById","79","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","defineProperty","_createClass","defineProperties","target","props","i","length","descriptor","key","protoProps","staticProps","App","_Component","this","getPrototypeOf","apply","arguments","Error","e","error","Component","80","_rollbarUmd","_rollbarUmd2","init","accessToken","captureUncaught","payload","environment","client","javascript","source_map_enabled","code_version","guess_uncaught_frames","172","root","factory","modules","moduleId","installedModules","id","loaded","m","c","p","setupJSON","JSONObject","JSON","globalnotifier","notifier","config","_rollbarConfig","alias","globalAlias","shimRunning","shimId","wrapper","RollbarNotifier","Notifier","_rollbarWindowOnError","old","args","_rollbarWrappedError","uncaughtError","_extendListenerPrototype","hasOwnProperty","oldAddEventListener","addEventListener","event","callback","bubble","wrap","oldRemoveEventListener","removeEventListener","_wrapped","Util","parent","configure","oldOnError","isType","_rollbarOldOnError","onerror","belongsToShim","Array","slice","global","globals","captureUnhandledRejections","_unhandledRejectionHandler","reason","promise","detail","unhandledRejection","processPayloads","RollbarJSON","xhr","_wrapNotifierFn","fn","ctx","consoleError","_notifyPayloadAvailable","payloadProcessorTimeout","setTimeout","_deferredPayloadProcess","topLevelNotifier","_topLevelNotifier","parentNotifier","endpoint","DEFAULT_ENDPOINT","options","enabled","scrubFields","extend","DEFAULT_SCRUB_FIELDS","checkIgnore","logLevel","DEFAULT_LOG_LEVEL","reportLevel","DEFAULT_REPORT_LEVEL","uncaughtErrorLevel","DEFAULT_UNCAUGHT_ERROR_LEVEL","lastError","plugins","directlyEnqueuePayload","payloadToSend","_rollbarPayloadQueue","push","_generateLogFn","level","_getLogArgs","_log","message","err","custom","_buildPayloadBodyMessage","stringify","result","body","extra","_buildPayloadBodyTrace","description","stackInfo","guess","errorParser","guessErrorClass","className","name","trace","exception","class","stack","stackFrame","frame","code","pre","post","contextLength","mid","frames","filename","url","sanitizeUrl","lineno","line","method","func","colno","column","context","Math","floor","reverse","payloadObj","shift","_processPayload","undefined","payloadObject","endpointUrl","now","Date","getTime","rateLimitStartTime","rateLimitPerMinCounter","globalRateLimit","_globalRollbarOptions","maxItems","globalRateLimitPerMin","itemsPerMinute","checkOverRateLimit","ignoreRateLimit","rateLimitCounter","checkOverRateLimitPerMin","XHR","resp","ConnectionError","RETRY_DELAY","NOTIFIER_VERSION","DEFAULT_ITEMS_PER_MIN","DEFAULT_MAX_ITEMS","LEVELS","debug","info","warning","critical","startTime","NotifierPrototype","argT","arg","extraArgs","typeName","DOMException","_route","path","endpointTrailingSlash","test","pathBeginningSlash","substring","_processShimQueue","shimQueue","shim","parentShim","shimToNotifier","_buildPayload","ts","notifierOptions","uuid","uuid4","payloadData","platform","framework","language","_buildBody","request","location","href","query_string","search","user_ip","runtime_ms","timestamp","round","browser","navigator","userAgent","cookie_enabled","cookieEnabled","screen","width","height","_getBrowserPlugins","server","version","access_token","data","_scrub","_browserPlugins","cur","navPlugins","numPlugins","redactQueryParam","dummy0","paramPart","dummy1","dummy2","dummy3","valPart","redact","paramScrubber","v","queryRes","replace","valScrubber","k","paramRes","scrubber","tmpV","_getScrubFieldRegexs","_getScrubQueryParamRegexs","traverse","pat","ret","RegExp","_urlIsWhitelisted","whitelist","frameLength","listLength","urlRegex","j","hostWhiteList","_messageIsIgnored","exceptionMessage","ignoredMessages","len","messageIsIgnored","rIgnoredMessage","traceMessage","bodyMessage","_enqueuePayload","isUncaught","callerArgs","ignoredCallback","msg","_internalCheckIgnore","verbose","consoleInfo","logFunction","transform","levelVal","jquery","ignoreAjaxErrors","_savedStackTrace","parse","String","log","warn","lineNo","colNo","guessFunctionName","gatherContext","mode","useragent","_rollbarContext","knownOptions","overwrite","newOptionsCopy","scope","payloadOptions","scopedNotifier","f","ctxFn","_isWrap","_wrappedSource","toString","prop","loadFull","immediate","hasOwn","toStr","isArray","arr","isPlainObject","hasOwnConstructor","hasIsPrototypeOf","src","copy","copyIsArray","clone","deep","UNKNOWN_FUNCTION","Frame","_stackFrame","fileName","lineNumber","functionName","columnNumber","Stack","getStack","parserStack","ErrorStackParser","errMsg","errClassMatch","match","ERR_CLASS_REGEXP","errClass","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","StackFrame","_map","array","thisArg","map","output","_filter","filter","FIREFOX_SAFARI_STACK_REGEXP","CHROME_IE_STACK_REGEXP","SAFARI_NATIVE_CODE_REGEXP","stacktrace","parseOpera","parseV8OrIE","parseFFOrSafari","extractLocation","urlLike","indexOf","locationParts","split","lastNumber","pop","possibleNumber","isNaN","parseFloat","isFinite","join","filtered","tokens","parseOpera9","parseOpera11","parseOpera10","lineRE","lines","exec","argsRaw","functionCall","_isNumber","n","source","setFunctionName","setArgs","setFileName","setLineNumber","setColumnNumber","setSource","getFunctionName","getArgs","getFileName","getLineNumber","Number","getColumnNumber","getSource","toLowerCase","parseUri","str","o","parseUriOptions","parser","strictMode","uri","q","$0","$1","$2","baseUrlParts","anchor","query","isObj","keys","val","d","r","random","objectCreate","Temp","formatArgsAsString","substr","ieVersion","console","consoleLog","strict","loose","con","dummy","properties","methods","getIEVersion","undef","div","all","getElementsByTagName","innerHTML","Browser","XMLHttpFactories","XMLHttpRequest","ActiveXObject","createXMLHTTPObject","xmlhttp","factories","numFactories","onreadystatechange","readyState","jsonResponse","responseText","status","ex","exc","open","setRequestHeader","send","e1","XDomainRequest","ontimeout","onload","onprogress","e2"],"mappings":"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","file":"app-8946152cf5233c7f65be.js","sourcesContent":["webpackJsonp([1],{\n\n/***/ 0:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _react = __webpack_require__(46);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _reactDom = __webpack_require__(52);\n\t\n\tvar _App = __webpack_require__(79);\n\t\n\tvar _App2 = _interopRequireDefault(_App);\n\t\n\tvar _rollbar = __webpack_require__(80);\n\t\n\tvar _rollbar2 = _interopRequireDefault(_rollbar);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\twindow.Rollbar = _rollbar2.default;\n\t\n\t(0, _reactDom.render)(_react2.default.createElement(_App2.default, null), document.getElementById('root'));\n\n/***/ }),\n\n/***/ 79:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _react = __webpack_require__(46);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar App = function (_Component) {\n\t  _inherits(App, _Component);\n\t\n\t  function App() {\n\t    _classCallCheck(this, App);\n\t\n\t    return _possibleConstructorReturn(this, (App.__proto__ || Object.getPrototypeOf(App)).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(App, [{\n\t    key: 'render',\n\t    value: function render() {\n\t      try {\n\t        throw new Error('Something went wrong');\n\t      } catch (e) {\n\t        window.Rollbar.error(e);\n\t      }\n\t\n\t      return _react2.default.createElement(\n\t        'div',\n\t        null,\n\t        'RollbarSourceMapPlugin - React example'\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return App;\n\t}(_react.Component);\n\t\n\texports.default = App;\n\n/***/ }),\n\n/***/ 80:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _rollbarUmd = __webpack_require__(172);\n\t\n\tvar _rollbarUmd2 = _interopRequireDefault(_rollbarUmd);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.default = _rollbarUmd2.default.init({\n\t  accessToken: (\"aaaabbbbccccddddeeeeffff00001111\"),\n\t  captureUncaught: true,\n\t  payload: {\n\t    environment: (\"production\"),\n\t    client: {\n\t      javascript: {\n\t        source_map_enabled: true,\n\t        code_version: (\"6d9f1225c8043bc35dc23053b5b9482457ca3ef9\\n\"),\n\t        // Optionally have Rollbar guess which frames the error was thrown from\n\t        // when the browser does not provide line and column numbers.\n\t        guess_uncaught_frames: true\n\t      }\n\t    }\n\t  }\n\t});\n\n/***/ }),\n\n/***/ 172:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t(function webpackUniversalModuleDefinition(root, factory) {\n\t\tif(true)\n\t\t\tmodule.exports = factory();\n\t\telse if(typeof define === 'function' && define.amd)\n\t\t\tdefine([], factory);\n\t\telse {\n\t\t\tvar a = factory();\n\t\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t\t}\n\t})(this, function() {\n\treturn /******/ (function(modules) { // webpackBootstrap\n\t/******/ \t// The module cache\n\t/******/ \tvar installedModules = {};\n\t/******/\n\t/******/ \t// The require function\n\t/******/ \tfunction __webpack_require__(moduleId) {\n\t/******/\n\t/******/ \t\t// Check if module is in cache\n\t/******/ \t\tif(installedModules[moduleId])\n\t/******/ \t\t\treturn installedModules[moduleId].exports;\n\t/******/\n\t/******/ \t\t// Create a new module (and put it into the cache)\n\t/******/ \t\tvar module = installedModules[moduleId] = {\n\t/******/ \t\t\texports: {},\n\t/******/ \t\t\tid: moduleId,\n\t/******/ \t\t\tloaded: false\n\t/******/ \t\t};\n\t/******/\n\t/******/ \t\t// Execute the module function\n\t/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\t/******/\n\t/******/ \t\t// Flag the module as loaded\n\t/******/ \t\tmodule.loaded = true;\n\t/******/\n\t/******/ \t\t// Return the exports of the module\n\t/******/ \t\treturn module.exports;\n\t/******/ \t}\n\t/******/\n\t/******/\n\t/******/ \t// expose the modules object (__webpack_modules__)\n\t/******/ \t__webpack_require__.m = modules;\n\t/******/\n\t/******/ \t// expose the module cache\n\t/******/ \t__webpack_require__.c = installedModules;\n\t/******/\n\t/******/ \t// __webpack_public_path__\n\t/******/ \t__webpack_require__.p = \"\";\n\t/******/\n\t/******/ \t// Load entry module and return exports\n\t/******/ \treturn __webpack_require__(0);\n\t/******/ })\n\t/************************************************************************/\n\t/******/ ([\n\t/* 0 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\tmodule.exports = __webpack_require__(1);\n\t\n\t\n\t/***/ },\n\t/* 1 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t'use strict';\n\t\t\n\t\t/* globals __USE_JSON__ */\n\t\t\n\t\t\n\t\tvar globalnotifier = __webpack_require__(2);\n\t\tvar notifier = __webpack_require__(3);\n\t\t\n\t\t\n\t\tfunction setupJSON() {\n\t\t  var JSONObject = typeof JSON === 'undefined' ? {} : JSON;\n\t\t\n\t\t  if (false) {\n\t\t    // This adds the script to this context. We need it since this library\n\t\t    // is not a CommonJs or AMD module.\n\t\t    var setupCustomJSON = require('../../vendor/JSON-js/json2.js');\n\t\t\n\t\t    var customJSON = {};\n\t\t    setupCustomJSON(customJSON);\n\t\t\n\t\t    JSONObject = customJSON;\n\t\t  }\n\t\t\n\t\t  globalnotifier.setupJSON(JSONObject);\n\t\t}\n\t\t\n\t\t\n\t\tsetupJSON();\n\t\t\n\t\t\n\t\tvar config = window._rollbarConfig;\n\t\tvar alias = config && config.globalAlias || 'Rollbar';\n\t\tvar shimRunning = window[alias] && typeof window[alias].shimId !== 'undefined';\n\t\t\n\t\t\n\t\t/* We must not initialize the full notifier here if the\n\t\t * shim is loaded, snippet_callback will do that for us\n\t\t */\n\t\tif (!shimRunning && config) {\n\t\t  globalnotifier.wrapper.init(config);\n\t\t} else {\n\t\t  window.Rollbar = globalnotifier.wrapper;\n\t\t  // We need to expose Notifier for the snippet\n\t\t  window.RollbarNotifier = notifier.Notifier;\n\t\t}\n\t\t\n\t\tmodule.exports = globalnotifier.wrapper;\n\t\n\t\n\t/***/ },\n\t/* 2 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t'use strict';\n\t\t\n\t\tvar notifier = __webpack_require__(3);\n\t\tvar Util = __webpack_require__(8);\n\t\t\n\t\tvar Notifier = notifier.Notifier;\n\t\t// Stub out the wrapped error which is set\n\t\twindow._rollbarWrappedError = null;\n\t\t\n\t\t\n\t\t// Global window.onerror handler\n\t\tfunction _rollbarWindowOnError(client, old, args) {\n\t\t  if (!args[4] && window._rollbarWrappedError) {\n\t\t    args[4] = window._rollbarWrappedError;\n\t\t    window._rollbarWrappedError = null;\n\t\t  }\n\t\t\n\t\t  client.uncaughtError.apply(client, args);\n\t\t  if (old) {\n\t\t    old.apply(window, args);\n\t\t  }\n\t\t}\n\t\t\n\t\tfunction _extendListenerPrototype(client, prototype) {\n\t\t  if (prototype.hasOwnProperty && prototype.hasOwnProperty('addEventListener')) {\n\t\t    var oldAddEventListener = prototype.addEventListener;\n\t\t    prototype.addEventListener = function(event, callback, bubble) {\n\t\t      oldAddEventListener.call(this, event, client.wrap(callback), bubble);\n\t\t    };\n\t\t\n\t\t    var oldRemoveEventListener = prototype.removeEventListener;\n\t\t    prototype.removeEventListener = function(event, callback, bubble) {\n\t\t      oldRemoveEventListener.call(this, event, callback && callback._wrapped || callback, bubble);\n\t\t    };\n\t\t  }\n\t\t}\n\t\t\n\t\t\n\t\t// Add an init() method to do the same things that the shim would do\n\t\tvar wrapper = {};\n\t\twrapper.init = function(config, parent) {\n\t\t  var client = new Notifier(parent);\n\t\t  client.configure(config);\n\t\t\n\t\t  if (config.captureUncaught) {\n\t\t    // Set the global onerror handler\n\t\t    var oldOnError;\n\t\t\n\t\t    // If the parent, probably a shim, stores an oldOnError function, use that one\n\t\t    if (parent && Util.isType(parent._rollbarOldOnError, 'function')) {\n\t\t      oldOnError = parent._rollbarOldOnError;\n\t\t    }\n\t\t    // If window.onerror doesn't belongs to our shim then we save it. This avoids\n\t\t    // using the shim onerror and send reports twice.\n\t\t    else if (window.onerror && !window.onerror.belongsToShim) {\n\t\t      oldOnError = window.onerror;\n\t\t    }\n\t\t\n\t\t    window.onerror = function() {\n\t\t      var args = Array.prototype.slice.call(arguments, 0);\n\t\t      _rollbarWindowOnError(client, oldOnError, args);\n\t\t    };\n\t\t\n\t\t    // Adapted from https://github.com/bugsnag/bugsnag-js\n\t\t    var globals = ['EventTarget', 'Window', 'Node', 'ApplicationCache', 'AudioTrackList', 'ChannelMergerNode', 'CryptoOperation', 'EventSource',\n\t\t     'FileReader', 'HTMLUnknownElement', 'IDBDatabase', 'IDBRequest', 'IDBTransaction', 'KeyOperation', 'MediaController',\n\t\t     'MessagePort', 'ModalWindow', 'Notification', 'SVGElementInstance', 'Screen', 'TextTrack', 'TextTrackCue',\n\t\t     'TextTrackList', 'WebSocket', 'WebSocketWorker', 'Worker', 'XMLHttpRequest', 'XMLHttpRequestEventTarget',\n\t\t     'XMLHttpRequestUpload'];\n\t\t\n\t\t    var i;\n\t\t    var global;\n\t\t    for (i = 0; i < globals.length; ++i) {\n\t\t      global = globals[i];\n\t\t\n\t\t      if (window[global] && window[global].prototype) {\n\t\t        _extendListenerPrototype(client, window[global].prototype);\n\t\t      }\n\t\t    }\n\t\t  }\n\t\t\n\t\t  if (config.captureUnhandledRejections) {\n\t\t    if (parent && Util.isType(parent._unhandledRejectionHandler, 'function')) {\n\t\t      window.removeEventListener('unhandledrejection', parent._unhandledRejectionHandler)\n\t\t    }\n\t\t\n\t\t    client._unhandledRejectionHandler = function (event) {\n\t\t      var reason = event.reason;\n\t\t      var promise = event.promise;\n\t\t      // Some Promise libraries do not yet conform to the standard and place the reason and promise inside\n\t\t      // a detail attribute\n\t\t      var detail = event.detail;\n\t\t\n\t\t      if (!reason && detail) {\n\t\t        reason = detail.reason;\n\t\t        promise = detail.promise;\n\t\t      }\n\t\t\n\t\t      client.unhandledRejection(reason, promise);\n\t\t    };\n\t\t\n\t\t    window.addEventListener('unhandledrejection', client._unhandledRejectionHandler);\n\t\t  }\n\t\t\n\t\t  window.Rollbar = client;\n\t\t  // Finally, start processing payloads using the global notifier\n\t\t  Notifier.processPayloads();\n\t\t  return client;\n\t\t};\n\t\t\n\t\t\n\t\tmodule.exports = {\n\t\t  wrapper: wrapper,\n\t\t  setupJSON: notifier.setupJSON\n\t\t};\n\t\n\t\n\t/***/ },\n\t/* 3 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t'use strict';\n\t\t\n\t\t/* globals __NOTIFIER_VERSION__ */\n\t\t/* globals __DEFAULT_ENDPOINT__ */\n\t\t/* globals __DEFAULT_SCRUB_FIELDS__ */\n\t\t/* globals __DEFAULT_LOG_LEVEL__ */\n\t\t/* globals __DEFAULT_REPORT_LEVEL__ */\n\t\t/* globals __DEFAULT_UNCAUGHT_ERROR_LEVEL */\n\t\t/* globals __DEFAULT_ITEMS_PER_MIN__ */\n\t\t/* globals __DEFAULT_MAX_ITEMS__ */\n\t\t/* globals DOMException */\n\t\t\n\t\t\n\t\tvar extend = __webpack_require__(4);\n\t\t\n\t\tvar errorParser = __webpack_require__(5);\n\t\tvar Util = __webpack_require__(8);\n\t\tvar xhr = __webpack_require__(11);\n\t\t\n\t\tvar XHR = xhr.XHR;\n\t\tvar ConnectionError = xhr.ConnectionError;\n\t\tvar RollbarJSON = null;\n\t\t\n\t\tfunction setupJSON(JSON) {\n\t\t  RollbarJSON = JSON;\n\t\t  xhr.setupJSON(JSON);\n\t\t  Util.setupJSON(JSON);\n\t\t}\n\t\t\n\t\tfunction _wrapNotifierFn(fn, ctx) {\n\t\t  return function() {\n\t\t    var self = ctx || this;\n\t\t    try {\n\t\t      return fn.apply(self, arguments);\n\t\t    } catch (e) {\n\t\t      Util.consoleError('[Rollbar]:', e);\n\t\t    }\n\t\t  };\n\t\t}\n\t\t\n\t\t\n\t\tvar payloadProcessorTimeout;\n\t\tfunction _notifyPayloadAvailable() {\n\t\t  if (!payloadProcessorTimeout) {\n\t\t    payloadProcessorTimeout = setTimeout(_deferredPayloadProcess, 1000);\n\t\t  }\n\t\t}\n\t\t\n\t\t// Updated by the build process to match package.json\n\t\tNotifier.NOTIFIER_VERSION = (\"1.9.4\");\n\t\tNotifier.DEFAULT_ENDPOINT = (\"api.rollbar.com/api/1/\");\n\t\tNotifier.DEFAULT_SCRUB_FIELDS = ([\"pw\",\"pass\",\"passwd\",\"password\",\"secret\",\"confirm_password\",\"confirmPassword\",\"password_confirmation\",\"passwordConfirmation\",\"access_token\",\"accessToken\",\"secret_key\",\"secretKey\",\"secretToken\"]);\n\t\tNotifier.DEFAULT_LOG_LEVEL = (\"debug\");\n\t\tNotifier.DEFAULT_REPORT_LEVEL = (\"debug\");\n\t\tNotifier.DEFAULT_UNCAUGHT_ERROR_LEVEL = (\"error\");\n\t\tNotifier.DEFAULT_ITEMS_PER_MIN = (60);\n\t\tNotifier.DEFAULT_MAX_ITEMS = (0);\n\t\t\n\t\tNotifier.LEVELS = {\n\t\t  debug: 0,\n\t\t  info: 1,\n\t\t  warning: 2,\n\t\t  error: 3,\n\t\t  critical: 4\n\t\t};\n\t\t\n\t\tNotifier.RETRY_DELAY = 1000 * 10;\n\t\t\n\t\t// This is the global queue where all notifiers will put their\n\t\t// payloads to be sent to Rollbar.\n\t\twindow._rollbarPayloadQueue = window._rollbarPayloadQueue || [];\n\t\t\n\t\t// This contains global options for all Rollbar notifiers.\n\t\twindow._globalRollbarOptions = {\n\t\t  startTime: (new Date()).getTime(),\n\t\t  maxItems: Notifier.DEFAULT_MAX_ITEMS,\n\t\t  itemsPerMinute: Notifier.DEFAULT_ITEMS_PER_MIN\n\t\t};\n\t\t\n\t\tvar _topLevelNotifier;\n\t\t\n\t\tfunction topLevelNotifier() {\n\t\t  return _topLevelNotifier;\n\t\t}\n\t\t\n\t\tfunction Notifier(parentNotifier) {\n\t\t  // Save the first notifier so we can use it to send system messages like\n\t\t  // when the rate limit is reached.\n\t\t  _topLevelNotifier = _topLevelNotifier || this;\n\t\t\n\t\t  var endpoint = 'https://' + Notifier.DEFAULT_ENDPOINT;\n\t\t  this.options = {\n\t\t    enabled: true,\n\t\t    endpoint: endpoint,\n\t\t    environment: 'production',\n\t\t    scrubFields: extend([], Notifier.DEFAULT_SCRUB_FIELDS),\n\t\t    checkIgnore: null,\n\t\t    logLevel: Notifier.DEFAULT_LOG_LEVEL,\n\t\t    reportLevel: Notifier.DEFAULT_REPORT_LEVEL,\n\t\t    uncaughtErrorLevel: Notifier.DEFAULT_UNCAUGHT_ERROR_LEVEL,\n\t\t    payload: {}\n\t\t  };\n\t\t\n\t\t  this.lastError = null;\n\t\t  this.plugins = {};\n\t\t  this.parentNotifier = parentNotifier;\n\t\t\n\t\t  if (parentNotifier) {\n\t\t    // If the parent notifier has the shimId\n\t\t    // property it means that it's a Rollbar shim.\n\t\t    if (parentNotifier.hasOwnProperty('shimId')) {\n\t\t      // After we set this, the shim is just a proxy to this\n\t\t      // Notifier instance.\n\t\t      parentNotifier.notifier = this;\n\t\t    } else {\n\t\t      this.configure(parentNotifier.options);\n\t\t    }\n\t\t  }\n\t\t}\n\t\t\n\t\t\n\t\tvar NotifierPrototype = Notifier.prototype;\n\t\t\n\t\t\n\t\t/*\n\t\t * Returns an Object with keys:\n\t\t * {\n\t\t *  message: String,\n\t\t *  err: Error,\n\t\t *  custom: Object\n\t\t * }\n\t\t */\n\t\tNotifierPrototype._getLogArgs = function(args) {\n\t\t  var level = this.options.logLevel || Notifier.DEFAULT_LOG_LEVEL;\n\t\t  var message;\n\t\t  var err;\n\t\t  var custom;\n\t\t  var callback;\n\t\t  var argT;\n\t\t  var arg;\n\t\t  var extraArgs = [];\n\t\t\n\t\t  for (var i = 0; i < args.length; ++i) {\n\t\t    arg = args[i];\n\t\t\n\t\t    argT = Util.typeName(arg);\n\t\t    if (argT === 'string') {\n\t\t      if (message) {\n\t\t        extraArgs.push(arg);\n\t\t      } else {\n\t\t        message = arg;\n\t\t      }\n\t\t    } else if (argT === 'function') {\n\t\t      callback = _wrapNotifierFn(arg, this);  // wrap the callback in a try/catch block\n\t\t    } else if (argT === 'date') {\n\t\t      extraArgs.push(arg);\n\t\t    } else if (argT === 'error' ||\n\t\t               arg instanceof Error ||\n\t\t               (typeof DOMException !== 'undefined' && arg instanceof DOMException)) {\n\t\t      if (err) {\n\t\t        extraArgs.push(arg);\n\t\t      } else {\n\t\t        err = arg;\n\t\t      }\n\t\t    } else if (argT === 'object' || argT === 'array') {\n\t\t      if (custom) {\n\t\t        extraArgs.push(arg);\n\t\t      } else {\n\t\t        custom = arg;\n\t\t      }\n\t\t    }\n\t\t  }\n\t\t\n\t\t  // Save any of the extra arguments passed into the log function\n\t\t  // into `extraArgs` so they they show up in the payload.\n\t\t  if (extraArgs.length) {\n\t\t    custom = custom || {};\n\t\t    custom.extraArgs = extraArgs;\n\t\t  }\n\t\t\n\t\t  // TODO(cory): somehow pass in timestamp too...\n\t\t\n\t\t  return {\n\t\t    level: level,\n\t\t    message: message,\n\t\t    err: err,\n\t\t    custom: custom,\n\t\t    callback: callback\n\t\t  };\n\t\t};\n\t\t\n\t\t\n\t\tNotifierPrototype._route = function(path) {\n\t\t  var endpoint = this.options.endpoint;\n\t\t\n\t\t  var endpointTrailingSlash = /\\/$/.test(endpoint);\n\t\t  var pathBeginningSlash = /^\\//.test(path);\n\t\t\n\t\t  if (endpointTrailingSlash && pathBeginningSlash) {\n\t\t    path = path.substring(1);\n\t\t  } else if (!endpointTrailingSlash && !pathBeginningSlash) {\n\t\t    path = '/' + path;\n\t\t  }\n\t\t\n\t\t  return endpoint + path;\n\t\t};\n\t\t\n\t\t\n\t\t/*\n\t\t * Given a queue containing each call to the shim, call the\n\t\t * corresponding method on this instance.\n\t\t *\n\t\t * shim queue contains:\n\t\t *\n\t\t * {shim: Rollbar, method: 'info', args: ['hello world', exc], ts: Date}\n\t\t */\n\t\tNotifierPrototype._processShimQueue = function(shimQueue) {\n\t\t  var shim;\n\t\t  var obj;\n\t\t  var method;\n\t\t  var args;\n\t\t  var shimToNotifier = {};\n\t\t  var parentShim;\n\t\t  var parentNotifier;\n\t\t  var notifier;\n\t\t\n\t\t  // For each of the messages in the shimQueue we need to:\n\t\t  // 1. get/create the notifier for that shim\n\t\t  // 2. apply the message to the notifier\n\t\t  while ((obj = shimQueue.shift())) {\n\t\t    shim = obj.shim;\n\t\t    method = obj.method;\n\t\t    args = obj.args;\n\t\t    parentShim = shim.parentShim;\n\t\t\n\t\t    // Get the current notifier based on the shimId\n\t\t    notifier = shimToNotifier[shim.shimId];\n\t\t    if (!notifier) {\n\t\t\n\t\t      // If there is no notifier associated with the shimId\n\t\t      // Check to see if there's a parent shim\n\t\t      if (parentShim) {\n\t\t\n\t\t        // If there is a parent shim, get the parent notifier\n\t\t        // and create a new notifier for the current shim.\n\t\t        parentNotifier = shimToNotifier[parentShim.shimId];\n\t\t\n\t\t        // Create a new Notifier which will process all of the shim's\n\t\t        // messages\n\t\t        notifier = new Notifier(parentNotifier);\n\t\t      } else {\n\t\t        // If there is no parent, assume the shim is the top\n\t\t        // level shim and thus, should use this as the notifier.\n\t\t        notifier = this;\n\t\t      }\n\t\t\n\t\t      // Save off the shimId->notifier mapping\n\t\t      shimToNotifier[shim.shimId] = notifier;\n\t\t    }\n\t\t\n\t\t    if (notifier[method] && Util.isType(notifier[method], 'function')) {\n\t\t      notifier[method].apply(notifier, args);\n\t\t    }\n\t\t  }\n\t\t};\n\t\t\n\t\t\n\t\t/*\n\t\t * Builds and returns an Object that will be enqueued onto the\n\t\t * window._rollbarPayloadQueue array to be sent to Rollbar.\n\t\t */\n\t\tNotifierPrototype._buildPayload = function(ts, level, message, stackInfo, custom) {\n\t\t  var accessToken = this.options.accessToken;\n\t\t\n\t\t  // NOTE(cory): DEPRECATED\n\t\t  // Pass in {payload: {environment: 'production'}} instead of just {environment: 'production'}\n\t\t  var environment = this.options.environment;\n\t\t\n\t\t  var notifierOptions = extend(true, {}, this.options.payload);\n\t\t  var uuid = Util.uuid4();\n\t\t\n\t\t  if (Notifier.LEVELS[level] === undefined) {\n\t\t    throw new Error('Invalid level');\n\t\t  }\n\t\t\n\t\t  if (!message && !stackInfo && !custom) {\n\t\t    throw new Error('No message, stack info or custom data');\n\t\t  }\n\t\t\n\t\t  var payloadData = {\n\t\t    environment: environment,\n\t\t    endpoint: this.options.endpoint,\n\t\t    uuid: uuid,\n\t\t    level: level,\n\t\t    platform: 'browser',\n\t\t    framework: 'browser-js',\n\t\t    language: 'javascript',\n\t\t    body: this._buildBody(message, stackInfo, custom),\n\t\t    request: {\n\t\t      url: window.location.href,\n\t\t      query_string: window.location.search,\n\t\t      user_ip: '$remote_ip'\n\t\t    },\n\t\t    client: {\n\t\t      runtime_ms: ts.getTime() - window._globalRollbarOptions.startTime,\n\t\t      timestamp: Math.round(ts.getTime() / 1000),\n\t\t      javascript: {\n\t\t        browser: window.navigator.userAgent,\n\t\t        language: window.navigator.language,\n\t\t        cookie_enabled: window.navigator.cookieEnabled,\n\t\t        screen: {\n\t\t          width: window.screen.width,\n\t\t          height: window.screen.height\n\t\t        },\n\t\t        plugins: this._getBrowserPlugins()\n\t\t      }\n\t\t    },\n\t\t    server: {},\n\t\t    notifier: {\n\t\t      name: 'rollbar-browser-js',\n\t\t      version: Notifier.NOTIFIER_VERSION\n\t\t    }\n\t\t  };\n\t\t\n\t\t  if (notifierOptions.body) {\n\t\t    delete notifierOptions.body;\n\t\t  }\n\t\t\n\t\t  // Overwrite the options from configure() with the payload\n\t\t  // data.\n\t\t  var payload = {\n\t\t    access_token: accessToken,\n\t\t    data: extend(true, payloadData, notifierOptions)\n\t\t  };\n\t\t\n\t\t  // Only scrub the data section since we never want to scrub \"access_token\"\n\t\t  // even if it's in the scrub fields\n\t\t  this._scrub(payload.data);\n\t\t\n\t\t  return payload;\n\t\t};\n\t\t\n\t\t\n\t\tNotifierPrototype._buildBody = function(message, stackInfo, custom) {\n\t\t  var body;\n\t\t  if (stackInfo) {\n\t\t    body = _buildPayloadBodyTrace(message, stackInfo, custom);\n\t\t  } else {\n\t\t    body = _buildPayloadBodyMessage(message, custom);\n\t\t  }\n\t\t  return body;\n\t\t};\n\t\t\n\t\t\n\t\tNotifierPrototype._getBrowserPlugins = function() {\n\t\t  if (!this._browserPlugins) {\n\t\t    var navPlugins = window.navigator.plugins || [];\n\t\t    var cur;\n\t\t    var numPlugins = navPlugins.length;\n\t\t    var plugins = [];\n\t\t    var i;\n\t\t    for (i = 0; i < numPlugins; ++i) {\n\t\t      cur = navPlugins[i];\n\t\t      plugins.push({name: cur.name, description: cur.description});\n\t\t    }\n\t\t    this._browserPlugins = plugins;\n\t\t  }\n\t\t  return this._browserPlugins;\n\t\t};\n\t\t\n\t\t\n\t\t/*\n\t\t * Does an in-place modification of obj such that:\n\t\t * 1. All keys that match the notifier's options.scrubFields\n\t\t *    list will be normalized into all '*'\n\t\t * 2. Any query string params that match the same criteria will have\n\t\t *    their values normalized as well.\n\t\t */\n\t\tNotifierPrototype._scrub = function(obj) {\n\t\t  var scrubFields = this.options.scrubFields;\n\t\t  var paramRes = this._getScrubFieldRegexs(scrubFields);\n\t\t  var queryRes = this._getScrubQueryParamRegexs(scrubFields);\n\t\t\n\t\t  function redactQueryParam(dummy0, paramPart, dummy1, dummy2, dummy3, valPart) {\n\t\t    return paramPart + Util.redact(valPart);\n\t\t  }\n\t\t\n\t\t  function paramScrubber(v) {\n\t\t    var i;\n\t\t    if (Util.isType(v, 'string')) {\n\t\t      for (i = 0; i < queryRes.length; ++i) {\n\t\t        v = v.replace(queryRes[i], redactQueryParam);\n\t\t      }\n\t\t    }\n\t\t    return v;\n\t\t  }\n\t\t\n\t\t  function valScrubber(k, v) {\n\t\t    var i;\n\t\t    for (i = 0; i < paramRes.length; ++i) {\n\t\t      if (paramRes[i].test(k)) {\n\t\t        v = Util.redact(v);\n\t\t        break;\n\t\t      }\n\t\t    }\n\t\t    return v;\n\t\t  }\n\t\t\n\t\t  function scrubber(k, v) {\n\t\t    var tmpV = valScrubber(k, v);\n\t\t    if (tmpV === v) {\n\t\t      return paramScrubber(tmpV);\n\t\t    } else {\n\t\t      return tmpV;\n\t\t    }\n\t\t  }\n\t\t\n\t\t  Util.traverse(obj, scrubber);\n\t\t  return obj;\n\t\t};\n\t\t\n\t\t\n\t\tNotifierPrototype._getScrubFieldRegexs = function(scrubFields) {\n\t\t  var ret = [];\n\t\t  var pat;\n\t\t  for (var i = 0; i < scrubFields.length; ++i) {\n\t\t    pat = '\\\\[?(%5[bB])?' + scrubFields[i] + '\\\\[?(%5[bB])?\\\\]?(%5[dD])?';\n\t\t    ret.push(new RegExp(pat, 'i'));\n\t\t  }\n\t\t  return ret;\n\t\t};\n\t\t\n\t\t\n\t\tNotifierPrototype._getScrubQueryParamRegexs = function(scrubFields) {\n\t\t  var ret = [];\n\t\t  var pat;\n\t\t  for (var i = 0; i < scrubFields.length; ++i) {\n\t\t    pat = '\\\\[?(%5[bB])?' + scrubFields[i] + '\\\\[?(%5[bB])?\\\\]?(%5[dD])?';\n\t\t    ret.push(new RegExp('(' + pat + '=)([^&\\\\n]+)', 'igm'));\n\t\t  }\n\t\t  return ret;\n\t\t};\n\t\t\n\t\tNotifierPrototype._urlIsWhitelisted = function(payload){\n\t\t  var whitelist, trace, frame, filename, frameLength, url, listLength, urlRegex;\n\t\t  var i, j;\n\t\t\n\t\t  try {\n\t\t    whitelist = this.options.hostWhiteList;\n\t\t    trace = payload && payload.data && payload.data.body && payload.data.body.trace;\n\t\t\n\t\t    if (!whitelist || whitelist.length === 0) { return true; }\n\t\t    if (!trace) { return true; }\n\t\t\n\t\t    listLength = whitelist.length;\n\t\t    frameLength = trace.frames.length;\n\t\t    for (i = 0; i < frameLength; i++) {\n\t\t      frame = trace.frames[i];\n\t\t      filename = frame.filename;\n\t\t\n\t\t      if (!Util.isType(filename, 'string')) {\n\t\t        return true;\n\t\t      }\n\t\t\n\t\t      for (j = 0; j < listLength; j++) {\n\t\t        url = whitelist[j];\n\t\t        urlRegex = new RegExp(url);\n\t\t\n\t\t        if (urlRegex.test(filename)){\n\t\t          return true;\n\t\t        }\n\t\t      }\n\t\t    }\n\t\t  } catch (e) {\n\t\t    this.configure({hostWhiteList: null});\n\t\t    Util.consoleError(\"[Rollbar]: Error while reading your configuration's hostWhiteList option. Removing custom hostWhiteList.\", e);\n\t\t    return true;\n\t\t  }\n\t\t\n\t\t  return false;\n\t\t};\n\t\t\n\t\tNotifierPrototype._messageIsIgnored = function(payload){\n\t\t  var exceptionMessage, i, ignoredMessages, len, messageIsIgnored, rIgnoredMessage, trace, body, traceMessage, bodyMessage;\n\t\t  try {\n\t\t    messageIsIgnored = false;\n\t\t    ignoredMessages = this.options.ignoredMessages;\n\t\t    \n\t\t    if (!ignoredMessages || ignoredMessages.length === 0) {\n\t\t      return false;\n\t\t    }\n\t\t\n\t\t    body =  payload &&\n\t\t            payload.data &&\n\t\t            payload.data.body;\n\t\t\n\t\t    traceMessage =  body && \n\t\t                    body.trace &&\n\t\t                    body.trace.exception && \n\t\t                    body.trace.exception.message;\n\t\t    \n\t\t    bodyMessage = body && \n\t\t                  body.message && \n\t\t                  body.message.body;\n\t\t\n\t\t    exceptionMessage = traceMessage || bodyMessage;\n\t\t\n\t\t    if (!exceptionMessage){\n\t\t      return false;\n\t\t    }\n\t\t\n\t\t    len = ignoredMessages.length;\n\t\t    for (i = 0; i < len; i++) {\n\t\t      rIgnoredMessage = new RegExp(ignoredMessages[i], 'gi');\n\t\t      messageIsIgnored = rIgnoredMessage.test(exceptionMessage);\n\t\t\n\t\t      if (messageIsIgnored) {\n\t\t        break;\n\t\t      }\n\t\t    }\n\t\t  }\n\t\t  catch(e) {\n\t\t    this.configure({ignoredMessages: null});\n\t\t    Util.consoleError(\"[Rollbar]: Error while reading your configuration's ignoredMessages option. Removing custom ignoredMessages.\");\n\t\t  }\n\t\t\n\t\t  return messageIsIgnored;\n\t\t};\n\t\t\n\t\tNotifierPrototype._enqueuePayload = function(payload, isUncaught, callerArgs, callback) {\n\t\t\n\t\t  var payloadToSend = {\n\t\t    callback: callback,\n\t\t    accessToken: this.options.accessToken,\n\t\t    endpointUrl: this._route('item/'),\n\t\t    payload: payload\n\t\t  };\n\t\t\n\t\t  var ignoredCallback = function() {\n\t\t    if (callback) {\n\t\t      // If the item was ignored call the callback anyway\n\t\t      var msg = 'This item was not sent to Rollbar because it was ignored. ' +\n\t\t                'This can happen if a custom checkIgnore() function was used ' +\n\t\t                'or if the item\\'s level was less than the notifier\\' reportLevel. ' +\n\t\t                'See https://rollbar.com/docs/notifier/rollbar.js/configuration for more details.';\n\t\t\n\t\t      callback(null, {err: 0, result: {id: null, uuid: null, message: msg}});\n\t\t    }\n\t\t  };\n\t\t\n\t\t  // Internal checkIgnore will check the level against the minimum\n\t\t  // report level from this.options\n\t\t  if (this._internalCheckIgnore(isUncaught, callerArgs, payload)) {\n\t\t    ignoredCallback();\n\t\t    return;\n\t\t  }\n\t\t\n\t\t  // Users can set their own ignore criteria using this.options.checkIgnore()\n\t\t  try {\n\t\t    if (Util.isType(this.options.checkIgnore, 'function') &&\n\t\t        this.options.checkIgnore(isUncaught, callerArgs, payload)) {\n\t\t      ignoredCallback();\n\t\t      return;\n\t\t    }\n\t\t  } catch (e) {\n\t\t    // Disable the custom checkIgnore and report errors in the checkIgnore function\n\t\t    this.configure({checkIgnore: null});\n\t\t    Util.consoleError('[Rollbar]: Error while calling custom checkIgnore() function. Removing custom checkIgnore().', e);\n\t\t  }\n\t\t\n\t\t  if (!this._urlIsWhitelisted(payload)) {\n\t\t    return;\n\t\t  }\n\t\t\n\t\t  if (this._messageIsIgnored(payload)) {\n\t\t    return;\n\t\t  }\n\t\t\n\t\t  if (this.options.verbose) {\n\t\t    if (payload.data && payload.data.body && payload.data.body.trace) {\n\t\t      var trace = payload.data.body.trace;\n\t\t      var exceptionMessage = trace.exception.message;\n\t\t      Util.consoleError('[Rollbar]: ', exceptionMessage);\n\t\t    }\n\t\t\n\t\t    Util.consoleInfo('[Rollbar]: ', payloadToSend);\n\t\t  }\n\t\t\n\t\t  if (Util.isType(this.options.logFunction, 'function')) {\n\t\t    this.options.logFunction(payloadToSend);\n\t\t  }\n\t\t\n\t\t  try {\n\t\t    if (Util.isType(this.options.transform, 'function')) {\n\t\t      this.options.transform(payload);\n\t\t    }\n\t\t  } catch (e) {\n\t\t    this.configure({transform: null});\n\t\t    Util.consoleError('[Rollbar]: Error while calling custom transform() function. Removing custom transform().', e);\n\t\t  }\n\t\t\n\t\t  if (this.options.enabled) {\n\t\t    directlyEnqueuePayload(payloadToSend);\n\t\t  }\n\t\t\n\t\t};\n\t\t\n\t\tfunction directlyEnqueuePayload(payloadToSend) {\n\t\t  window._rollbarPayloadQueue.push(payloadToSend);\n\t\t  _notifyPayloadAvailable();\n\t\t}\n\t\t\n\t\tNotifierPrototype._internalCheckIgnore = function(isUncaught, callerArgs, payload) {\n\t\t  var level = callerArgs[0];\n\t\t  var levelVal = Notifier.LEVELS[level] || 0;\n\t\t  var reportLevel = Notifier.LEVELS[this.options.reportLevel] || 0;\n\t\t\n\t\t  if (levelVal < reportLevel) {\n\t\t    return true;\n\t\t  }\n\t\t\n\t\t  var plugins = this.options ? this.options.plugins : {};\n\t\t  if (plugins && plugins.jquery && plugins.jquery.ignoreAjaxErrors) {\n\t\t    try {\n\t\t      // The jQuery plugin adds in this key. Return true if it exists since\n\t\t      // we are ignoring ajax errors via the plugin config.\n\t\t      return !!(payload.data.body.message.extra.isAjax);\n\t\t    } catch (e) {\n\t\t      return false;\n\t\t    }\n\t\t  }\n\t\t\n\t\t  return false;\n\t\t};\n\t\t\n\t\t\n\t\t/*\n\t\t * Logs stuff to Rollbar using the default\n\t\t * logging level.\n\t\t *\n\t\t * Can be called with the following, (order doesn't matter but type does):\n\t\t * - message: String\n\t\t * - err: Error object, must have a .stack property or it will be\n\t\t *   treated as custom data\n\t\t * - custom: Object containing custom data to be sent along with\n\t\t *   the item\n\t\t * - callback: Function to call once the item is reported to Rollbar\n\t\t * - isUncaught: True if this error originated from an uncaught exception handler\n\t\t * - ignoreRateLimit: True if this item should be allowed despite rate limit checks\n\t\t *\n\t\t * Returns an object with (at least) the \"uuid\" property set.\n\t\t */\n\t\tNotifierPrototype._log = function(level, message, err, custom, callback, isUncaught, ignoreRateLimit) {\n\t\t  var stackInfo = null;\n\t\t  if (err) {\n\t\t    try {\n\t\t      // If we've already calculated the stack trace for the error, use it.\n\t\t      // This can happen for wrapped errors that don't have a \"stack\" property.\n\t\t      stackInfo = err._savedStackTrace ? err._savedStackTrace : errorParser.parse(err);\n\t\t\n\t\t      // Don't report the same error more than once\n\t\t      if (err === this.lastError) {\n\t\t        return;\n\t\t      }\n\t\t\n\t\t      this.lastError = err;\n\t\t    } catch (e) {\n\t\t      Util.consoleError('[Rollbar]: Error while parsing the error object.', e);\n\t\t      // err is not something we can parse so let's just send it along as a string\n\t\t      message = err.message || err.description || message || String(err);\n\t\t      err = null;\n\t\t    }\n\t\t  }\n\t\t\n\t\t  var payload = this._buildPayload(new Date(), level, message, stackInfo, custom);\n\t\t  if (ignoreRateLimit) {\n\t\t    payload.ignoreRateLimit = true;\n\t\t  }\n\t\t  this._enqueuePayload(payload, isUncaught ? true : false, [level, message, err, custom], callback);\n\t\t\n\t\t  // We're generating the UUID client-side, may as well return it so it can be\n\t\t  // used even before the payload has been sent to Rollbar.  #236\n\t\t  // I'm returning an object here, in case we eventually want to add other\n\t\t  // contextual information besides the uuid.\n\t\t  return {uuid: payload.data.uuid};\n\t\t};\n\t\t\n\t\tNotifierPrototype.log = _generateLogFn();\n\t\tNotifierPrototype.debug = _generateLogFn('debug');\n\t\tNotifierPrototype.info = _generateLogFn('info');\n\t\tNotifierPrototype.warn = _generateLogFn('warning'); // for console.warn() compatibility\n\t\tNotifierPrototype.warning = _generateLogFn('warning');\n\t\tNotifierPrototype.error = _generateLogFn('error');\n\t\tNotifierPrototype.critical = _generateLogFn('critical');\n\t\t\n\t\t// Adapted from tracekit.js\n\t\tNotifierPrototype.uncaughtError = _wrapNotifierFn(function(message, url, lineNo, colNo, err, context) {\n\t\t  context = context || null;\n\t\t  if (err && Util.isType(err, 'error')) {\n\t\t    this._log(this.options.uncaughtErrorLevel, message, err, context, null, true);\n\t\t    return;\n\t\t  }\n\t\t\n\t\t  // NOTE(cory): sometimes users will trigger an \"error\" event\n\t\t  // on the window object directly which will result in errMsg\n\t\t  // being an Object instead of a string.\n\t\t  //\n\t\t  if (url && Util.isType(url, 'error')) {\n\t\t    this._log(this.options.uncaughtErrorLevel, message, url, context, null, true);\n\t\t    return;\n\t\t  }\n\t\t\n\t\t  var location = {\n\t\t    'url': url || '',\n\t\t    'line': lineNo\n\t\t  };\n\t\t  location.func = errorParser.guessFunctionName(location.url, location.line);\n\t\t  location.context = errorParser.gatherContext(location.url, location.line);\n\t\t  var stack = {\n\t\t    'mode': 'onerror',\n\t\t    'message': err ? String(err) : (message || 'uncaught exception'),\n\t\t    'url': document.location.href,\n\t\t    'stack': [location],\n\t\t    'useragent': navigator.userAgent\n\t\t  };\n\t\t\n\t\t  var payload = this._buildPayload(new Date(), this.options.uncaughtErrorLevel,\n\t\t    message, stack, context);\n\t\t  this._enqueuePayload(payload, true, [this.options.uncaughtErrorLevel,\n\t\t    message, url, lineNo, colNo, err]);\n\t\t});\n\t\t\n\t\tNotifierPrototype.unhandledRejection = _wrapNotifierFn(function(reason, promise) {\n\t\t  var message;\n\t\t  // If the reason error was thrown within a wrap call, we'll extract the context given there.\n\t\t  // If users want to provide their Promise implementation with knowledge of the rollbar\n\t\t  // context they are created in, we'll search for that attribute, too.\n\t\t  var context;\n\t\t\n\t\t  if (reason) {\n\t\t    message = reason.message || String(reason);\n\t\t    context = reason._rollbarContext;\n\t\t  } else {\n\t\t    message = 'unhandled rejection was null or undefined!';\n\t\t  }\n\t\t\n\t\t  context = context || promise._rollbarContext || null;\n\t\t\n\t\t  if (reason && Util.isType(reason, 'error')) {\n\t\t    this._log(this.options.uncaughtErrorLevel, message, reason, context, null, true);\n\t\t    return;\n\t\t  }\n\t\t\n\t\t  var location = {\n\t\t    'url': '',\n\t\t    'line': 0\n\t\t  };\n\t\t  location.func = errorParser.guessFunctionName(location.url, location.line);\n\t\t  location.context = errorParser.gatherContext(location.url, location.line);\n\t\t  var stack = {\n\t\t    'mode': 'unhandledrejection',\n\t\t    'message': message,\n\t\t    'url': document.location.href,\n\t\t    'stack': [location],\n\t\t    'useragent': navigator.userAgent\n\t\t  };\n\t\t\n\t\t  var payload = this._buildPayload(new Date(), this.options.uncaughtErrorLevel,\n\t\t    message, stack, context);\n\t\t  this._enqueuePayload(payload, true, [this.options.uncaughtErrorLevel,\n\t\t    message, location.url, location.line, 0, reason, promise]);\n\t\t});\n\t\t\n\t\t\n\t\tNotifierPrototype.global = _wrapNotifierFn(function(options) {\n\t\t  options = options || {};\n\t\t  var knownOptions = {\n\t\t    startTime: options.startTime,\n\t\t    maxItems: options.maxItems,\n\t\t    itemsPerMinute: options.itemsPerMinute\n\t\t  };\n\t\t\n\t\t  extend(true, window._globalRollbarOptions, knownOptions);\n\t\t\n\t\t  if (options.maxItems !== undefined) {\n\t\t    rateLimitCounter = 0;\n\t\t  }\n\t\t\n\t\t  if (options.itemsPerMinute !== undefined) {\n\t\t    rateLimitPerMinCounter = 0;\n\t\t  }\n\t\t});\n\t\t\n\t\t\n\t\tNotifierPrototype.configure = _wrapNotifierFn(function(options, overwrite) {\n\t\t  // TODO(cory): only allow non-payload keys that we understand\n\t\t\n\t\t  // Make a copy of the options object for this notifier\n\t\t  var newOptionsCopy = extend(true, {}, options);\n\t\t  extend(!overwrite, this.options, newOptionsCopy);\n\t\t  this.global(newOptionsCopy);\n\t\t});\n\t\t\n\t\t/*\n\t\t * Create a new Notifier instance which has the same options\n\t\t * as the current notifier + options to override them.\n\t\t */\n\t\tNotifierPrototype.scope = _wrapNotifierFn(function(payloadOptions) {\n\t\t  var scopedNotifier = new Notifier(this);\n\t\t  extend(true, scopedNotifier.options.payload, payloadOptions);\n\t\t  return scopedNotifier;\n\t\t});\n\t\t\n\t\tNotifierPrototype.wrap = function(f, context) {\n\t\t  try {\n\t\t    var ctxFn;\n\t\t    if (Util.isType(context, 'function')) {\n\t\t      ctxFn = context;\n\t\t    } else {\n\t\t      ctxFn = function() {\n\t\t        return context || {};\n\t\t      };\n\t\t    }\n\t\t\n\t\t    if (!Util.isType(f, 'function')) {\n\t\t      return f;\n\t\t    }\n\t\t\n\t\t    // If the given function is already a wrapped function, just\n\t\t    // return it instead of wrapping twice\n\t\t    if (f._isWrap) {\n\t\t      return f;\n\t\t    }\n\t\t\n\t\t    if (!f._wrapped) {\n\t\t      f._wrapped = function () {\n\t\t        try {\n\t\t          return f.apply(this, arguments);\n\t\t        } catch(e) {\n\t\t          if (typeof e === 'string') {\n\t\t            e = new String(e);\n\t\t          }\n\t\t          if (!e.stack) {\n\t\t            e._savedStackTrace = errorParser.parse(e);\n\t\t          }\n\t\t          e._rollbarContext = ctxFn() || {};\n\t\t          e._rollbarContext._wrappedSource = f.toString();\n\t\t\n\t\t          window._rollbarWrappedError = e;\n\t\t          throw e;\n\t\t        }\n\t\t      };\n\t\t\n\t\t      f._wrapped._isWrap = true;\n\t\t\n\t\t      for (var prop in f) {\n\t\t        if (f.hasOwnProperty(prop)) {\n\t\t          f._wrapped[prop] = f[prop];\n\t\t        }\n\t\t      }\n\t\t    }\n\t\t\n\t\t    return f._wrapped;\n\t\t  } catch (e) {\n\t\t    // Try-catch here is to work around issue where wrap() fails when used inside Selenium.\n\t\t    // Return the original function if the wrap fails.\n\t\t    return f;\n\t\t  }\n\t\t};\n\t\t\n\t\t\n\t\tNotifierPrototype.loadFull = function() {\n\t\t  Util.consoleError('[Rollbar]: Unexpected Rollbar.loadFull() called on a Notifier instance');\n\t\t};\n\t\t\n\t\t\n\t\t/***** Misc *****/\n\t\t\n\t\tfunction _generateLogFn(level) {\n\t\t  return _wrapNotifierFn(function _logFn() {\n\t\t    var args = this._getLogArgs(arguments);\n\t\t\n\t\t    return this._log(level || args.level || this.options.logLevel || Notifier.DEFAULT_LOG_LEVEL,\n\t\t      args.message, args.err, args.custom, args.callback);\n\t\t  });\n\t\t}\n\t\t\n\t\t\n\t\tfunction _buildPayloadBodyMessage(message, custom) {\n\t\t  if (!message) {\n\t\t    if (custom) {\n\t\t      message = RollbarJSON.stringify(custom);\n\t\t    } else {\n\t\t      message = '';\n\t\t    }\n\t\t  }\n\t\t  var result = {\n\t\t    body: message\n\t\t  };\n\t\t\n\t\t  if (custom) {\n\t\t    result.extra = extend(true, {}, custom);\n\t\t  }\n\t\t\n\t\t  return {\n\t\t    message: result\n\t\t  };\n\t\t}\n\t\t\n\t\t\n\t\tfunction _buildPayloadBodyTrace(description, stackInfo, custom) {\n\t\t  var guess = errorParser.guessErrorClass(stackInfo.message);\n\t\t  var className = stackInfo.name || guess[0];\n\t\t  var message = guess[1];\n\t\t  var trace = {\n\t\t    exception: {\n\t\t      'class': className,\n\t\t      message: message\n\t\t    }\n\t\t  };\n\t\t\n\t\t  if (description) {\n\t\t    trace.exception.description = description || 'uncaught exception';\n\t\t  }\n\t\t\n\t\t  // Transform a TraceKit stackInfo object into a Rollbar trace\n\t\t  if (stackInfo.stack) {\n\t\t    var stackFrame;\n\t\t    var frame;\n\t\t    var code;\n\t\t    var pre;\n\t\t    var post;\n\t\t    var contextLength;\n\t\t    var i, mid;\n\t\t\n\t\t    trace.frames = [];\n\t\t    for (i = 0; i < stackInfo.stack.length; ++i) {\n\t\t      stackFrame = stackInfo.stack[i];\n\t\t      frame = {\n\t\t        filename: stackFrame.url ? Util.sanitizeUrl(stackFrame.url) : '(unknown)',\n\t\t        lineno: stackFrame.line || null,\n\t\t        method: (!stackFrame.func || stackFrame.func === '?') ? '[anonymous]' : stackFrame.func,\n\t\t        colno: stackFrame.column\n\t\t      };\n\t\t\n\t\t      code = pre = post = null;\n\t\t      contextLength = stackFrame.context ? stackFrame.context.length : 0;\n\t\t      if (contextLength) {\n\t\t        mid = Math.floor(contextLength / 2);\n\t\t        pre = stackFrame.context.slice(0, mid);\n\t\t        code = stackFrame.context[mid];\n\t\t        post = stackFrame.context.slice(mid);\n\t\t      }\n\t\t\n\t\t      if (code) {\n\t\t        frame.code = code;\n\t\t      }\n\t\t\n\t\t      if (pre || post) {\n\t\t        frame.context = {};\n\t\t        if (pre && pre.length) {\n\t\t          frame.context.pre = pre;\n\t\t        }\n\t\t        if (post && post.length) {\n\t\t          frame.context.post = post;\n\t\t        }\n\t\t      }\n\t\t\n\t\t      if (stackFrame.args) {\n\t\t        frame.args = stackFrame.args;\n\t\t      }\n\t\t\n\t\t      trace.frames.push(frame);\n\t\t    }\n\t\t\n\t\t    // NOTE(cory): reverse the frames since rollbar.com expects the most recent call last\n\t\t    trace.frames.reverse();\n\t\t\n\t\t    if (custom) {\n\t\t      trace.extra = extend(true, {}, custom);\n\t\t    }\n\t\t    return {trace: trace};\n\t\t  } else {\n\t\t    // no frames - not useful as a trace. just report as a message.\n\t\t    return _buildPayloadBodyMessage(className + ': ' + message, custom);\n\t\t  }\n\t\t}\n\t\t\n\t\t\n\t\t/***** Payload processor *****/\n\t\t\n\t\t\n\t\tNotifier.processPayloads = function(immediate) {\n\t\t  if (immediate) {\n\t\t    _deferredPayloadProcess();\n\t\t\n\t\t    return;\n\t\t  }\n\t\t\n\t\t  _notifyPayloadAvailable();\n\t\t};\n\t\t\n\t\t\n\t\tfunction _deferredPayloadProcess() {\n\t\t  var payloadObj;\n\t\t\n\t\t  try {\n\t\t    while ((payloadObj = window._rollbarPayloadQueue.shift())) {\n\t\t      _processPayload(payloadObj);\n\t\t    }\n\t\t  } finally {\n\t\t    payloadProcessorTimeout = undefined;\n\t\t  }\n\t\t}\n\t\t\n\t\t\n\t\tvar rateLimitStartTime = new Date().getTime();\n\t\tvar rateLimitCounter = 0;\n\t\tvar rateLimitPerMinCounter = 0;\n\t\tfunction _processPayload(payloadObject) {\n\t\t  var url = payloadObject.endpointUrl;\n\t\t  var accessToken = payloadObject.accessToken;\n\t\t  var payload = payloadObject.payload;\n\t\t  var callback = payloadObject.callback || function cb() {};\n\t\t\n\t\t  var now = new Date().getTime();\n\t\t  if (now - rateLimitStartTime >= 60000) {\n\t\t    rateLimitStartTime = now;\n\t\t    rateLimitPerMinCounter = 0;\n\t\t  }\n\t\t\n\t\t  // Check to see if we have a rate limit set or if\n\t\t  // the rate limit has been met/exceeded.\n\t\t  var globalRateLimit = window._globalRollbarOptions.maxItems;\n\t\t  var globalRateLimitPerMin = window._globalRollbarOptions.itemsPerMinute;\n\t\t  var checkOverRateLimit = function() { return !payload.ignoreRateLimit && globalRateLimit >= 1 && rateLimitCounter >= globalRateLimit; };\n\t\t  var checkOverRateLimitPerMin = function() { return !payload.ignoreRateLimit && globalRateLimitPerMin >= 1 && rateLimitPerMinCounter >= globalRateLimitPerMin; };\n\t\t\n\t\t  if (checkOverRateLimit()) {\n\t\t    callback(new Error(globalRateLimit + ' max items reached'));\n\t\t    return;\n\t\t  } else if (checkOverRateLimitPerMin()) {\n\t\t    callback(new Error(globalRateLimitPerMin + ' items per minute reached'));\n\t\t    return;\n\t\t  } else {\n\t\t    rateLimitCounter++;\n\t\t    rateLimitPerMinCounter++;\n\t\t\n\t\t    // Check to see if we have just reached the rate limit. If so, notify the customer.\n\t\t    if (checkOverRateLimit()) {\n\t\t      _topLevelNotifier._log(_topLevelNotifier.options.uncaughtErrorLevel, //level\n\t\t          'maxItems has been hit. Ignoring errors for the remainder of the current page load.', // message\n\t\t          null, // err\n\t\t          {maxItems: globalRateLimit}, // custom\n\t\t          null,  // callback\n\t\t          false, // isUncaught\n\t\t          true); // ignoreRateLimit\n\t\t    }\n\t\t    // remove this key since it's only used for internal notifier logic\n\t\t    if (payload.ignoreRateLimit) {\n\t\t      delete payload.ignoreRateLimit;\n\t\t    }\n\t\t  }\n\t\t\n\t\t  // There's either no rate limit or we haven't met it yet so\n\t\t  // go ahead and send it.\n\t\t  XHR.post(url, accessToken, payload, function xhrCallback(err, resp) {\n\t\t    if (err) {\n\t\t      if (err instanceof ConnectionError) {\n\t\t        // We're calling the callback now with the error, disable the callback for future attempts.\n\t\t        payloadObject.callback = function () { };\n\t\t        setTimeout(function () {\n\t\t          directlyEnqueuePayload(payloadObject);\n\t\t        }, Notifier.RETRY_DELAY);\n\t\t      }\n\t\t\n\t\t      return callback(err);\n\t\t    }\n\t\t\n\t\t    // TODO(cory): parse resp as JSON\n\t\t    return callback(null, resp);\n\t\t  });\n\t\t\n\t\t}\n\t\t\n\t\t\n\t\tmodule.exports = {\n\t\t  Notifier: Notifier,\n\t\t  setupJSON: setupJSON,\n\t\t  topLevelNotifier: topLevelNotifier\n\t\t};\n\t\t\n\t\n\t\n\t/***/ },\n\t/* 4 */\n\t/***/ function(module, exports) {\n\t\n\t\t'use strict';\n\t\t\n\t\tvar hasOwn = Object.prototype.hasOwnProperty;\n\t\tvar toStr = Object.prototype.toString;\n\t\t\n\t\tvar isArray = function isArray(arr) {\n\t\t\tif (typeof Array.isArray === 'function') {\n\t\t\t\treturn Array.isArray(arr);\n\t\t\t}\n\t\t\n\t\t\treturn toStr.call(arr) === '[object Array]';\n\t\t};\n\t\t\n\t\tvar isPlainObject = function isPlainObject(obj) {\n\t\t\tif (!obj || toStr.call(obj) !== '[object Object]') {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\n\t\t\tvar hasOwnConstructor = hasOwn.call(obj, 'constructor');\n\t\t\tvar hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t\t\t// Not own constructor property must be Object\n\t\t\tif (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\n\t\t\t// Own properties are enumerated firstly, so to speed up,\n\t\t\t// if last one is own, then all properties are own.\n\t\t\tvar key;\n\t\t\tfor (key in obj) {/**/}\n\t\t\n\t\t\treturn typeof key === 'undefined' || hasOwn.call(obj, key);\n\t\t};\n\t\t\n\t\tmodule.exports = function extend() {\n\t\t\tvar options, name, src, copy, copyIsArray, clone,\n\t\t\t\ttarget = arguments[0],\n\t\t\t\ti = 1,\n\t\t\t\tlength = arguments.length,\n\t\t\t\tdeep = false;\n\t\t\n\t\t\t// Handle a deep copy situation\n\t\t\tif (typeof target === 'boolean') {\n\t\t\t\tdeep = target;\n\t\t\t\ttarget = arguments[1] || {};\n\t\t\t\t// skip the boolean and the target\n\t\t\t\ti = 2;\n\t\t\t} else if ((typeof target !== 'object' && typeof target !== 'function') || target == null) {\n\t\t\t\ttarget = {};\n\t\t\t}\n\t\t\n\t\t\tfor (; i < length; ++i) {\n\t\t\t\toptions = arguments[i];\n\t\t\t\t// Only deal with non-null/undefined values\n\t\t\t\tif (options != null) {\n\t\t\t\t\t// Extend the base object\n\t\t\t\t\tfor (name in options) {\n\t\t\t\t\t\tsrc = target[name];\n\t\t\t\t\t\tcopy = options[name];\n\t\t\n\t\t\t\t\t\t// Prevent never-ending loop\n\t\t\t\t\t\tif (target !== copy) {\n\t\t\t\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\t\t\t\tif (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n\t\t\t\t\t\t\t\tif (copyIsArray) {\n\t\t\t\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\t\t\t\tclone = src && isArray(src) ? src : [];\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tclone = src && isPlainObject(src) ? src : {};\n\t\t\t\t\t\t\t\t}\n\t\t\n\t\t\t\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\t\t\t\ttarget[name] = extend(deep, clone, copy);\n\t\t\n\t\t\t\t\t\t\t// Don't bring in undefined values\n\t\t\t\t\t\t\t} else if (typeof copy !== 'undefined') {\n\t\t\t\t\t\t\t\ttarget[name] = copy;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\n\t\t\t// Return the modified object\n\t\t\treturn target;\n\t\t};\n\t\t\n\t\n\t\n\t/***/ },\n\t/* 5 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t'use strict';\n\t\t\n\t\tvar ErrorStackParser = __webpack_require__(6);\n\t\t\n\t\tvar UNKNOWN_FUNCTION = '?';\n\t\tvar ERR_CLASS_REGEXP = new RegExp('^(([a-zA-Z0-9-_$ ]*): *)?(Uncaught )?([a-zA-Z0-9-_$ ]*): ');\n\t\t\n\t\tfunction guessFunctionName() {\n\t\t  return UNKNOWN_FUNCTION;\n\t\t}\n\t\t\n\t\t\n\t\tfunction gatherContext() {\n\t\t  return null;\n\t\t}\n\t\t\n\t\t\n\t\tfunction Frame(stackFrame) {\n\t\t  var data = {};\n\t\t\n\t\t  data._stackFrame = stackFrame;\n\t\t\n\t\t  data.url = stackFrame.fileName;\n\t\t  data.line = stackFrame.lineNumber;\n\t\t  data.func = stackFrame.functionName;\n\t\t  data.column = stackFrame.columnNumber;\n\t\t  data.args = stackFrame.args;\n\t\t\n\t\t  data.context = gatherContext(data.url, data.line);\n\t\t\n\t\t  return data;\n\t\t}\n\t\t\n\t\t\n\t\tfunction Stack(exception) {\n\t\t  function getStack() {\n\t\t    var parserStack = [];\n\t\t\n\t\t    try {\n\t\t      parserStack = ErrorStackParser.parse(exception);\n\t\t    } catch(e) {\n\t\t      parserStack = [];\n\t\t    }\n\t\t\n\t\t    var stack = [];\n\t\t\n\t\t    for (var i = 0; i < parserStack.length; i++) {\n\t\t      stack.push(new Frame(parserStack[i]));\n\t\t    }\n\t\t\n\t\t    return stack;\n\t\t  }\n\t\t\n\t\t  return {\n\t\t    stack: getStack(),\n\t\t    message: exception.message,\n\t\t    name: exception.name\n\t\t  };\n\t\t}\n\t\t\n\t\t\n\t\tfunction parse(e) {\n\t\t  return new Stack(e);\n\t\t}\n\t\t\n\t\t\n\t\tfunction guessErrorClass(errMsg) {\n\t\t  if (!errMsg) {\n\t\t    return ['Unknown error. There was no error message to display.', ''];\n\t\t  }\n\t\t  var errClassMatch = errMsg.match(ERR_CLASS_REGEXP);\n\t\t  var errClass = '(unknown)';\n\t\t\n\t\t  if (errClassMatch) {\n\t\t    errClass = errClassMatch[errClassMatch.length - 1];\n\t\t    errMsg = errMsg.replace((errClassMatch[errClassMatch.length - 2] || '') + errClass + ':', '');\n\t\t    errMsg = errMsg.replace(/(^[\\s]+|[\\s]+$)/g, '');\n\t\t  }\n\t\t  return [errClass, errMsg];\n\t\t}\n\t\t\n\t\t\n\t\tmodule.exports = {\n\t\t  guessFunctionName: guessFunctionName,\n\t\t  guessErrorClass: guessErrorClass,\n\t\t  gatherContext: gatherContext,\n\t\t  parse: parse,\n\t\t  Stack: Stack,\n\t\t  Frame: Frame\n\t\t};\n\t\n\t\n\t/***/ },\n\t/* 6 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (root, factory) {\n\t\t    'use strict';\n\t\t    // Universal Module Definition (UMD) to support AMD, CommonJS/Node.js, Rhino, and browsers.\n\t\t\n\t\t    /* istanbul ignore next */\n\t\t    if (true) {\n\t\t        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(7)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\t    } else if (typeof exports === 'object') {\n\t\t        module.exports = factory(require('stackframe'));\n\t\t    } else {\n\t\t        root.ErrorStackParser = factory(root.StackFrame);\n\t\t    }\n\t\t}(this, function ErrorStackParser(StackFrame) {\n\t\t    'use strict';\n\t\t\n\t\t    var FIREFOX_SAFARI_STACK_REGEXP = /(^|@)\\S+\\:\\d+/;\n\t\t    var CHROME_IE_STACK_REGEXP = /^\\s*at .*(\\S+\\:\\d+|\\(native\\))/m;\n\t\t    var SAFARI_NATIVE_CODE_REGEXP = /^(eval@)?(\\[native code\\])?$/;\n\t\t\n\t\t    function _map(array, fn, thisArg) {\n\t\t        if (typeof Array.prototype.map === 'function') {\n\t\t            return array.map(fn, thisArg);\n\t\t        } else {\n\t\t            var output = new Array(array.length);\n\t\t            for (var i = 0; i < array.length; i++) {\n\t\t                output[i] = fn.call(thisArg, array[i]);\n\t\t            }\n\t\t            return output;\n\t\t        }\n\t\t    }\n\t\t\n\t\t    function _filter(array, fn, thisArg) {\n\t\t        if (typeof Array.prototype.filter === 'function') {\n\t\t            return array.filter(fn, thisArg);\n\t\t        } else {\n\t\t            var output = [];\n\t\t            for (var i = 0; i < array.length; i++) {\n\t\t                if (fn.call(thisArg, array[i])) {\n\t\t                    output.push(array[i]);\n\t\t                }\n\t\t            }\n\t\t            return output;\n\t\t        }\n\t\t    }\n\t\t\n\t\t    return {\n\t\t        /**\n\t\t         * Given an Error object, extract the most information from it.\n\t\t         * @param error {Error}\n\t\t         * @return Array[StackFrame]\n\t\t         */\n\t\t        parse: function ErrorStackParser$$parse(error) {\n\t\t            if (typeof error.stacktrace !== 'undefined' || typeof error['opera#sourceloc'] !== 'undefined') {\n\t\t                return this.parseOpera(error);\n\t\t            } else if (error.stack && error.stack.match(CHROME_IE_STACK_REGEXP)) {\n\t\t                return this.parseV8OrIE(error);\n\t\t            } else if (error.stack) {\n\t\t                return this.parseFFOrSafari(error);\n\t\t            } else {\n\t\t                throw new Error('Cannot parse given Error object');\n\t\t            }\n\t\t        },\n\t\t\n\t\t        /**\n\t\t         * Separate line and column numbers from a URL-like string.\n\t\t         * @param urlLike String\n\t\t         * @return Array[String]\n\t\t         */\n\t\t        extractLocation: function ErrorStackParser$$extractLocation(urlLike) {\n\t\t            // Fail-fast but return locations like \"(native)\"\n\t\t            if (urlLike.indexOf(':') === -1) {\n\t\t                return [urlLike];\n\t\t            }\n\t\t\n\t\t            var locationParts = urlLike.replace(/[\\(\\)\\s]/g, '').split(':');\n\t\t            var lastNumber = locationParts.pop();\n\t\t            var possibleNumber = locationParts[locationParts.length - 1];\n\t\t            if (!isNaN(parseFloat(possibleNumber)) && isFinite(possibleNumber)) {\n\t\t                var lineNumber = locationParts.pop();\n\t\t                return [locationParts.join(':'), lineNumber, lastNumber];\n\t\t            } else {\n\t\t                return [locationParts.join(':'), lastNumber, undefined];\n\t\t            }\n\t\t        },\n\t\t\n\t\t        parseV8OrIE: function ErrorStackParser$$parseV8OrIE(error) {\n\t\t            var filtered = _filter(error.stack.split('\\n'), function (line) {\n\t\t                return !!line.match(CHROME_IE_STACK_REGEXP);\n\t\t            }, this);\n\t\t\n\t\t            return _map(filtered, function (line) {\n\t\t                if (line.indexOf('(eval ') > -1) {\n\t\t                    // Throw away eval information until we implement stacktrace.js/stackframe#8\n\t\t                    line = line.replace(/eval code/g, 'eval').replace(/(\\(eval at [^\\()]*)|(\\)\\,.*$)/g, '');\n\t\t                }\n\t\t                var tokens = line.replace(/^\\s+/, '').replace(/\\(eval code/g, '(').split(/\\s+/).slice(1);\n\t\t                var locationParts = this.extractLocation(tokens.pop());\n\t\t                var functionName = tokens.join(' ') || undefined;\n\t\t                var fileName = locationParts[0] === 'eval' ? undefined : locationParts[0];\n\t\t\n\t\t                return new StackFrame(functionName, undefined, fileName, locationParts[1], locationParts[2], line);\n\t\t            }, this);\n\t\t        },\n\t\t\n\t\t        parseFFOrSafari: function ErrorStackParser$$parseFFOrSafari(error) {\n\t\t            var filtered = _filter(error.stack.split('\\n'), function (line) {\n\t\t                return !line.match(SAFARI_NATIVE_CODE_REGEXP);\n\t\t            }, this);\n\t\t\n\t\t            return _map(filtered, function (line) {\n\t\t                // Throw away eval information until we implement stacktrace.js/stackframe#8\n\t\t                if (line.indexOf(' > eval') > -1) {\n\t\t                    line = line.replace(/ line (\\d+)(?: > eval line \\d+)* > eval\\:\\d+\\:\\d+/g, ':$1');\n\t\t                }\n\t\t\n\t\t                if (line.indexOf('@') === -1 && line.indexOf(':') === -1) {\n\t\t                    // Safari eval frames only have function names and nothing else\n\t\t                    return new StackFrame(line);\n\t\t                } else {\n\t\t                    var tokens = line.split('@');\n\t\t                    var locationParts = this.extractLocation(tokens.pop());\n\t\t                    var functionName = tokens.shift() || undefined;\n\t\t                    return new StackFrame(functionName, undefined, locationParts[0], locationParts[1], locationParts[2], line);\n\t\t                }\n\t\t            }, this);\n\t\t        },\n\t\t\n\t\t        parseOpera: function ErrorStackParser$$parseOpera(e) {\n\t\t            if (!e.stacktrace || (e.message.indexOf('\\n') > -1 &&\n\t\t                e.message.split('\\n').length > e.stacktrace.split('\\n').length)) {\n\t\t                return this.parseOpera9(e);\n\t\t            } else if (!e.stack) {\n\t\t                return this.parseOpera10(e);\n\t\t            } else {\n\t\t                return this.parseOpera11(e);\n\t\t            }\n\t\t        },\n\t\t\n\t\t        parseOpera9: function ErrorStackParser$$parseOpera9(e) {\n\t\t            var lineRE = /Line (\\d+).*script (?:in )?(\\S+)/i;\n\t\t            var lines = e.message.split('\\n');\n\t\t            var result = [];\n\t\t\n\t\t            for (var i = 2, len = lines.length; i < len; i += 2) {\n\t\t                var match = lineRE.exec(lines[i]);\n\t\t                if (match) {\n\t\t                    result.push(new StackFrame(undefined, undefined, match[2], match[1], undefined, lines[i]));\n\t\t                }\n\t\t            }\n\t\t\n\t\t            return result;\n\t\t        },\n\t\t\n\t\t        parseOpera10: function ErrorStackParser$$parseOpera10(e) {\n\t\t            var lineRE = /Line (\\d+).*script (?:in )?(\\S+)(?:: In function (\\S+))?$/i;\n\t\t            var lines = e.stacktrace.split('\\n');\n\t\t            var result = [];\n\t\t\n\t\t            for (var i = 0, len = lines.length; i < len; i += 2) {\n\t\t                var match = lineRE.exec(lines[i]);\n\t\t                if (match) {\n\t\t                    result.push(new StackFrame(match[3] || undefined, undefined, match[2], match[1], undefined, lines[i]));\n\t\t                }\n\t\t            }\n\t\t\n\t\t            return result;\n\t\t        },\n\t\t\n\t\t        // Opera 10.65+ Error.stack very similar to FF/Safari\n\t\t        parseOpera11: function ErrorStackParser$$parseOpera11(error) {\n\t\t            var filtered = _filter(error.stack.split('\\n'), function (line) {\n\t\t                return !!line.match(FIREFOX_SAFARI_STACK_REGEXP) &&\n\t\t                    !line.match(/^Error created at/);\n\t\t            }, this);\n\t\t\n\t\t            return _map(filtered, function (line) {\n\t\t                var tokens = line.split('@');\n\t\t                var locationParts = this.extractLocation(tokens.pop());\n\t\t                var functionCall = (tokens.shift() || '');\n\t\t                var functionName = functionCall\n\t\t                        .replace(/<anonymous function(: (\\w+))?>/, '$2')\n\t\t                        .replace(/\\([^\\)]*\\)/g, '') || undefined;\n\t\t                var argsRaw;\n\t\t                if (functionCall.match(/\\(([^\\)]*)\\)/)) {\n\t\t                    argsRaw = functionCall.replace(/^[^\\(]+\\(([^\\)]*)\\)$/, '$1');\n\t\t                }\n\t\t                var args = (argsRaw === undefined || argsRaw === '[arguments not available]') ? undefined : argsRaw.split(',');\n\t\t                return new StackFrame(functionName, args, locationParts[0], locationParts[1], locationParts[2], line);\n\t\t            }, this);\n\t\t        }\n\t\t    };\n\t\t}));\n\t\t\n\t\n\t\n\t/***/ },\n\t/* 7 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (root, factory) {\n\t\t    'use strict';\n\t\t    // Universal Module Definition (UMD) to support AMD, CommonJS/Node.js, Rhino, and browsers.\n\t\t\n\t\t    /* istanbul ignore next */\n\t\t    if (true) {\n\t\t        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\t    } else if (typeof exports === 'object') {\n\t\t        module.exports = factory();\n\t\t    } else {\n\t\t        root.StackFrame = factory();\n\t\t    }\n\t\t}(this, function () {\n\t\t    'use strict';\n\t\t    function _isNumber(n) {\n\t\t        return !isNaN(parseFloat(n)) && isFinite(n);\n\t\t    }\n\t\t\n\t\t    function StackFrame(functionName, args, fileName, lineNumber, columnNumber, source) {\n\t\t        if (functionName !== undefined) {\n\t\t            this.setFunctionName(functionName);\n\t\t        }\n\t\t        if (args !== undefined) {\n\t\t            this.setArgs(args);\n\t\t        }\n\t\t        if (fileName !== undefined) {\n\t\t            this.setFileName(fileName);\n\t\t        }\n\t\t        if (lineNumber !== undefined) {\n\t\t            this.setLineNumber(lineNumber);\n\t\t        }\n\t\t        if (columnNumber !== undefined) {\n\t\t            this.setColumnNumber(columnNumber);\n\t\t        }\n\t\t        if (source !== undefined) {\n\t\t            this.setSource(source);\n\t\t        }\n\t\t    }\n\t\t\n\t\t    StackFrame.prototype = {\n\t\t        getFunctionName: function () {\n\t\t            return this.functionName;\n\t\t        },\n\t\t        setFunctionName: function (v) {\n\t\t            this.functionName = String(v);\n\t\t        },\n\t\t\n\t\t        getArgs: function () {\n\t\t            return this.args;\n\t\t        },\n\t\t        setArgs: function (v) {\n\t\t            if (Object.prototype.toString.call(v) !== '[object Array]') {\n\t\t                throw new TypeError('Args must be an Array');\n\t\t            }\n\t\t            this.args = v;\n\t\t        },\n\t\t\n\t\t        // NOTE: Property name may be misleading as it includes the path,\n\t\t        // but it somewhat mirrors V8's JavaScriptStackTraceApi\n\t\t        // https://code.google.com/p/v8/wiki/JavaScriptStackTraceApi and Gecko's\n\t\t        // http://mxr.mozilla.org/mozilla-central/source/xpcom/base/nsIException.idl#14\n\t\t        getFileName: function () {\n\t\t            return this.fileName;\n\t\t        },\n\t\t        setFileName: function (v) {\n\t\t            this.fileName = String(v);\n\t\t        },\n\t\t\n\t\t        getLineNumber: function () {\n\t\t            return this.lineNumber;\n\t\t        },\n\t\t        setLineNumber: function (v) {\n\t\t            if (!_isNumber(v)) {\n\t\t                throw new TypeError('Line Number must be a Number');\n\t\t            }\n\t\t            this.lineNumber = Number(v);\n\t\t        },\n\t\t\n\t\t        getColumnNumber: function () {\n\t\t            return this.columnNumber;\n\t\t        },\n\t\t        setColumnNumber: function (v) {\n\t\t            if (!_isNumber(v)) {\n\t\t                throw new TypeError('Column Number must be a Number');\n\t\t            }\n\t\t            this.columnNumber = Number(v);\n\t\t        },\n\t\t\n\t\t        getSource: function () {\n\t\t            return this.source;\n\t\t        },\n\t\t        setSource: function (v) {\n\t\t            this.source = String(v);\n\t\t        },\n\t\t\n\t\t        toString: function() {\n\t\t            var functionName = this.getFunctionName() || '{anonymous}';\n\t\t            var args = '(' + (this.getArgs() || []).join(',') + ')';\n\t\t            var fileName = this.getFileName() ? ('@' + this.getFileName()) : '';\n\t\t            var lineNumber = _isNumber(this.getLineNumber()) ? (':' + this.getLineNumber()) : '';\n\t\t            var columnNumber = _isNumber(this.getColumnNumber()) ? (':' + this.getColumnNumber()) : '';\n\t\t            return functionName + args + fileName + lineNumber + columnNumber;\n\t\t        }\n\t\t    };\n\t\t\n\t\t    return StackFrame;\n\t\t}));\n\t\n\t\n\t/***/ },\n\t/* 8 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t'use strict';\n\t\t\n\t\t__webpack_require__(9);\n\t\t\n\t\tvar browser = __webpack_require__(10);\n\t\t\n\t\tvar RollbarJSON = null;\n\t\t\n\t\tfunction setupJSON(JSON) {\n\t\t  RollbarJSON = JSON;\n\t\t}\n\t\t\n\t\tvar parseUriOptions = {\n\t\t  strictMode: false,\n\t\t    key: [\n\t\t    'source',\n\t\t    'protocol',\n\t\t    'authority',\n\t\t    'userInfo',\n\t\t    'user',\n\t\t    'password',\n\t\t    'host',\n\t\t    'port',\n\t\t    'relative',\n\t\t    'path',\n\t\t    'directory',\n\t\t    'file',\n\t\t    'query',\n\t\t    'anchor'\n\t\t  ],\n\t\t    q: {\n\t\t    name: 'queryKey',\n\t\t      parser: /(?:^|&)([^&=]*)=?([^&]*)/g\n\t\t  },\n\t\t  parser: {\n\t\t    strict: /^(?:([^:\\/?#]+):)?(?:\\/\\/((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\\/?#]*)(?::(\\d*))?))?((((?:[^?#\\/]*\\/)*)([^?#]*))(?:\\?([^#]*))?(?:#(.*))?)/,\n\t\t      loose: /^(?:(?![^:@]+:[^:@\\/]*@)([^:\\/?#.]+):)?(?:\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/\n\t\t  }\n\t\t};\n\t\t\n\t\t\n\t\tfunction typeName(obj) {\n\t\t  return ({}).toString.call(obj).match(/\\s([a-zA-Z]+)/)[1].toLowerCase();\n\t\t}\n\t\t\n\t\t\n\t\tfunction isType(obj, name) {\n\t\t  return typeName(obj) === name;\n\t\t}\n\t\t\n\t\t\n\t\tfunction parseUri(str) {\n\t\t  if (!isType(str, 'string')) {\n\t\t    throw new Error('received invalid input');\n\t\t  }\n\t\t\n\t\t  var o = parseUriOptions;\n\t\t  var m = o.parser[o.strictMode ? 'strict' : 'loose'].exec(str);\n\t\t  var uri = {};\n\t\t  var i = 14;\n\t\t\n\t\t  while (i--) {\n\t\t    uri[o.key[i]] = m[i] || '';\n\t\t  }\n\t\t\n\t\t  uri[o.q.name] = {};\n\t\t  uri[o.key[12]].replace(o.q.parser, function ($0, $1, $2) {\n\t\t    if ($1) {\n\t\t      uri[o.q.name][$1] = $2;\n\t\t    }\n\t\t  });\n\t\t\n\t\t  return uri;\n\t\t}\n\t\t\n\t\t\n\t\tfunction sanitizeUrl(url) {\n\t\t  var baseUrlParts = parseUri(url);\n\t\t  // remove a trailing # if there is no anchor\n\t\t  if (baseUrlParts.anchor === '') {\n\t\t    baseUrlParts.source = baseUrlParts.source.replace('#', '');\n\t\t  }\n\t\t\n\t\t  url = baseUrlParts.source.replace('?' + baseUrlParts.query, '');\n\t\t  return url;\n\t\t}\n\t\t\n\t\t\n\t\tfunction traverse(obj, func) {\n\t\t  var k;\n\t\t  var v;\n\t\t  var i;\n\t\t  var isObj = isType(obj, 'object');\n\t\t  var isArray = isType(obj, 'array');\n\t\t  var keys = [];\n\t\t\n\t\t  if (isObj) {\n\t\t    for (k in obj) {\n\t\t      if (obj.hasOwnProperty(k)) {\n\t\t        keys.push(k);\n\t\t      }\n\t\t    }\n\t\t  } else if (isArray) {\n\t\t    for (i = 0; i < obj.length; ++i) {\n\t\t      keys.push(i);\n\t\t    }\n\t\t  }\n\t\t\n\t\t  for (i = 0; i < keys.length; ++i) {\n\t\t    k = keys[i];\n\t\t    v = obj[k];\n\t\t    isObj = isType(v, 'object');\n\t\t    isArray = isType(v, 'array');\n\t\t    if (isObj || isArray) {\n\t\t      obj[k] = traverse(v, func);\n\t\t    } else {\n\t\t      obj[k] = func(k, v);\n\t\t    }\n\t\t  }\n\t\t\n\t\t  return obj;\n\t\t}\n\t\t\n\t\t\n\t\tfunction redact(val) {\n\t\t  val = String(val);\n\t\t  return new Array(val.length + 1).join('*');\n\t\t}\n\t\t\n\t\t\n\t\t// from http://stackoverflow.com/a/8809472/1138191\n\t\tfunction uuid4() {\n\t\t  var d = new Date().getTime();\n\t\t  var uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n\t\t    var r = (d + Math.random() * 16) % 16 | 0;\n\t\t    d = Math.floor(d / 16);\n\t\t    return (c === 'x' ? r : (r & 0x7 | 0x8)).toString(16);\n\t\t  });\n\t\t  return uuid;\n\t\t}\n\t\t\n\t\t\n\t\t// Modified version of Object.create polyfill from:\n\t\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/create\n\t\tfunction objectCreate(prototype) {\n\t\t  if (typeof Object.create != 'function') {\n\t\t    return ((function(undefined) {\n\t\t      var Temp = function() {};\n\t\t      return function (prototype) {\n\t\t        if(prototype !== null && prototype !== Object(prototype)) {\n\t\t          throw TypeError('Argument must be an object, or null');\n\t\t        }\n\t\t        Temp.prototype = prototype || {};\n\t\t        var result = new Temp();\n\t\t        Temp.prototype = null;\n\t\t\n\t\t        // to imitate the case of Object.create(null)\n\t\t        if(prototype === null) {\n\t\t           result.__proto__ = null;\n\t\t        }\n\t\t        return result;\n\t\t      };\n\t\t    })())(prototype);\n\t\t  } else {\n\t\t    return Object.create(prototype);\n\t\t  }\n\t\t}\n\t\t\n\t\t// IE8 logs objects as [object Object].  This is a wrapper that makes it a bit\n\t\t// more convenient by logging the JSON of the object.  But only do that in IE8 and below\n\t\t// because other browsers are smarter and handle it properly.\n\t\tfunction formatArgsAsString() {\n\t\t  var args = [];\n\t\t  for (var i=0; i < arguments.length; i++) {\n\t\t    var arg = arguments[i];\n\t\t    if (typeof arg === 'object') {\n\t\t      arg = RollbarJSON.stringify(arg);\n\t\t      if (arg.length > 500)\n\t\t        arg = arg.substr(0,500)+'...';\n\t\t    } else if (typeof arg === 'undefined') {\n\t\t      arg = 'undefined';\n\t\t    }\n\t\t    args.push(arg);\n\t\t  }\n\t\t  return args.join(' ');\n\t\t}\n\t\t\n\t\tfunction consoleError() {\n\t\t  if (browser.ieVersion() <= 8) {\n\t\t    console.error(formatArgsAsString.apply(null, arguments));\n\t\t  } else {\n\t\t    console.error.apply(null, arguments);\n\t\t  }\n\t\t}\n\t\t\n\t\tfunction consoleInfo() {\n\t\t  if (browser.ieVersion() <= 8) {\n\t\t    console.info(formatArgsAsString.apply(null, arguments));\n\t\t  } else {\n\t\t    console.info.apply(null, arguments);\n\t\t  }\n\t\t}\n\t\t\n\t\tfunction consoleLog() {\n\t\t  if (browser.ieVersion() <= 8) {\n\t\t    console.log(formatArgsAsString.apply(null, arguments));\n\t\t  } else {\n\t\t    console.log.apply(null, arguments);\n\t\t  }\n\t\t}\n\t\t\n\t\tvar Util = {\n\t\t  setupJSON: setupJSON,\n\t\t  isType: isType,\n\t\t  parseUri: parseUri,\n\t\t  parseUriOptions: parseUriOptions,\n\t\t  redact: redact,\n\t\t  sanitizeUrl: sanitizeUrl,\n\t\t  traverse: traverse,\n\t\t  typeName: typeName,\n\t\t  uuid4: uuid4,\n\t\t  objectCreate: objectCreate,\n\t\t  consoleError: consoleError,\n\t\t  consoleInfo: consoleInfo,\n\t\t  consoleLog: consoleLog\n\t\t};\n\t\t\n\t\t\n\t\tmodule.exports = Util;\n\t\n\t\n\t/***/ },\n\t/* 9 */\n\t/***/ function(module, exports) {\n\t\n\t\t// Console-polyfill. MIT license.\n\t\t// https://github.com/paulmillr/console-polyfill\n\t\t// Make it safe to do console.log() always.\n\t\t(function(global) {\n\t\t  'use strict';\n\t\t  if (!global.console) {\n\t\t    global.console = {};\n\t\t  }\n\t\t  var con = global.console;\n\t\t  var prop, method;\n\t\t  var dummy = function() {};\n\t\t  var properties = ['memory'];\n\t\t  var methods = ('assert,clear,count,debug,dir,dirxml,error,exception,group,' +\n\t\t     'groupCollapsed,groupEnd,info,log,markTimeline,profile,profiles,profileEnd,' +\n\t\t     'show,table,time,timeEnd,timeline,timelineEnd,timeStamp,trace,warn').split(',');\n\t\t  while (prop = properties.pop()) if (!con[prop]) con[prop] = {};\n\t\t  while (method = methods.pop()) if (!con[method]) con[method] = dummy;\n\t\t  // Using `this` for web workers & supports Browserify / Webpack.\n\t\t})(typeof window === 'undefined' ? this : window);\n\t\n\t\n\t/***/ },\n\t/* 10 */\n\t/***/ function(module, exports) {\n\t\n\t\t'use strict';\n\t\t\n\t\t// This browser.js module is used to encapsulate any ugly browser/feature\n\t\t// detection we may need to do.\n\t\t\n\t\t// Figure out which version of IE we're using, if any.\n\t\t// This is gleaned from http://stackoverflow.com/questions/5574842/best-way-to-check-for-ie-less-than-9-in-javascript-without-library\n\t\t// Will return an integer on IE (i.e. 8)\n\t\t// Will return undefined otherwise\n\t\tfunction getIEVersion() {\n\t\t  var undef,\n\t\t    v = 3,\n\t\t    div = document.createElement('div'),\n\t\t    all = div.getElementsByTagName('i');\n\t\t\n\t\t  while (\n\t\t    div.innerHTML = '<!--[if gt IE ' + (++v) + ']><i></i><![endif]-->',\n\t\t      all[0]\n\t\t    );\n\t\t\n\t\t  return v > 4 ? v : undef;\n\t\t}\n\t\t\n\t\tvar Browser = {\n\t\t  ieVersion: getIEVersion\n\t\t};\n\t\t\n\t\tmodule.exports = Browser;\n\t\n\t\n\t/***/ },\n\t/* 11 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t'use strict';\n\t\t\n\t\t/* globals ActiveXObject */\n\t\t\n\t\tvar Util = __webpack_require__(8);\n\t\t\n\t\tvar RollbarJSON = null;\n\t\t\n\t\tfunction setupJSON(JSON) {\n\t\t  RollbarJSON = JSON;\n\t\t}\n\t\t\n\t\tfunction ConnectionError(message) {\n\t\t  this.name = 'Connection Error';\n\t\t  this.message = message;\n\t\t  this.stack = (new Error()).stack;\n\t\t}\n\t\t\n\t\tConnectionError.prototype = Util.objectCreate(Error.prototype);\n\t\tConnectionError.prototype.constructor = ConnectionError;\n\t\t\n\t\tvar XHR = {\n\t\t  XMLHttpFactories: [\n\t\t      function () {\n\t\t        return new XMLHttpRequest();\n\t\t      },\n\t\t      function () {\n\t\t        return new ActiveXObject('Msxml2.XMLHTTP');\n\t\t      },\n\t\t      function () {\n\t\t        return new ActiveXObject('Msxml3.XMLHTTP');\n\t\t      },\n\t\t      function () {\n\t\t        return new ActiveXObject('Microsoft.XMLHTTP');\n\t\t      }\n\t\t  ],\n\t\t  createXMLHTTPObject: function() {\n\t\t    var xmlhttp = false;\n\t\t    var factories = XHR.XMLHttpFactories;\n\t\t    var i;\n\t\t    var numFactories = factories.length;\n\t\t    for (i = 0; i < numFactories; i++) {\n\t\t      /* eslint-disable no-empty */\n\t\t      try {\n\t\t        xmlhttp = factories[i]();\n\t\t        break;\n\t\t      } catch (e) {\n\t\t        // pass\n\t\t      }\n\t\t      /* eslint-enable no-empty */\n\t\t    }\n\t\t    return xmlhttp;\n\t\t  },\n\t\t  post: function(url, accessToken, payload, callback) {\n\t\t    if (!Util.isType(payload, 'object')) {\n\t\t      throw new Error('Expected an object to POST');\n\t\t    }\n\t\t    payload = RollbarJSON.stringify(payload);\n\t\t    callback = callback || function() {};\n\t\t    var request = XHR.createXMLHTTPObject();\n\t\t    if (request) {\n\t\t      try {\n\t\t        try {\n\t\t          var onreadystatechange = function() {\n\t\t            try {\n\t\t              if (onreadystatechange && request.readyState === 4) {\n\t\t                onreadystatechange = undefined;\n\t\t\n\t\t                // TODO(cory): have the notifier log an internal error on non-200 response codes\n\t\t                var jsonResponse = RollbarJSON.parse(request.responseText);\n\t\t                if (request.status === 200) {\n\t\t                  callback(null, jsonResponse);\n\t\t                } else if (Util.isType(request.status, 'number') &&\n\t\t                  request.status >= 400 && request.status < 600) {\n\t\t\n\t\t                  if (request.status == 403) {\n\t\t                    // likely caused by using a server access token, display console message to let\n\t\t                    // user know\n\t\t                    Util.consoleError('[Rollbar]:' + jsonResponse.message);\n\t\t                  }\n\t\t                  // return valid http status codes\n\t\t                  callback(new Error(String(request.status)));\n\t\t                } else {\n\t\t                  // IE will return a status 12000+ on some sort of connection failure,\n\t\t                  // so we return a blank error\n\t\t                  // http://msdn.microsoft.com/en-us/library/aa383770%28VS.85%29.aspx\n\t\t                  callback(new ConnectionError('XHR response had no status code (likely connection failure)'));\n\t\t                }\n\t\t              }\n\t\t            } catch (ex) {\n\t\t              //jquery source mentions firefox may error out while accessing the\n\t\t              //request members if there is a network error\n\t\t              //https://github.com/jquery/jquery/blob/a938d7b1282fc0e5c52502c225ae8f0cef219f0a/src/ajax/xhr.js#L111\n\t\t              var exc;\n\t\t              if (ex && ex.stack) {\n\t\t                exc = ex;\n\t\t              } else {\n\t\t                exc = new Error(ex);\n\t\t              }\n\t\t              callback(exc);\n\t\t            }\n\t\t          };\n\t\t\n\t\t          request.open('POST', url, true);\n\t\t          if (request.setRequestHeader) {\n\t\t            request.setRequestHeader('Content-Type', 'application/json');\n\t\t            request.setRequestHeader('X-Rollbar-Access-Token', accessToken);\n\t\t          }\n\t\t          request.onreadystatechange = onreadystatechange;\n\t\t          request.send(payload);\n\t\t        } catch (e1) {\n\t\t          // Sending using the normal xmlhttprequest object didn't work, try XDomainRequest\n\t\t          if (typeof XDomainRequest !== 'undefined') {\n\t\t\n\t\t            // Assume we are in a really old browser which has a bunch of limitations:\n\t\t            // http://blogs.msdn.com/b/ieinternals/archive/2010/05/13/xdomainrequest-restrictions-limitations-and-workarounds.aspx\n\t\t\n\t\t            // If the current page is http, try and send over http\n\t\t            if (window.location.href.substring(0, 5) === 'http:' && url.substring(0, 5) === 'https') {\n\t\t              url = 'http' + url.substring(5);\n\t\t            }\n\t\t\n\t\t            var ontimeout = function() {\n\t\t              callback(new ConnectionError('Request timed out'));\n\t\t            };\n\t\t\n\t\t            var onerror = function() {\n\t\t              callback(new Error('Error during request'));\n\t\t            };\n\t\t\n\t\t            var onload = function() {\n\t\t              callback(null, RollbarJSON.parse(request.responseText));\n\t\t            };\n\t\t\n\t\t            request = new XDomainRequest();\n\t\t            request.onprogress = function() {};\n\t\t            request.ontimeout = ontimeout;\n\t\t            request.onerror = onerror;\n\t\t            request.onload = onload;\n\t\t            request.open('POST', url, true);\n\t\t            request.send(payload);\n\t\t          }\n\t\t        }\n\t\t      } catch (e2) {\n\t\t        callback(e2);\n\t\t      }\n\t\t    }\n\t\t  }\n\t\t};\n\t\t\n\t\tmodule.exports = {\n\t\t  XHR: XHR,\n\t\t  setupJSON: setupJSON,\n\t\t  ConnectionError: ConnectionError\n\t\t};\n\t\n\t\n\t/***/ }\n\t/******/ ])\n\t});\n\t;\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// app-8946152cf5233c7f65be.js","import React from 'react';\nimport { render } from 'react-dom';\nimport App from './components/App';\nimport rollbar from './rollbar';\n\nwindow.Rollbar = rollbar;\n\nrender(<App />, document.getElementById('root'));\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","import React, { Component } from 'react';\n\nclass App extends Component {\n  render() {\n    try {\n      throw new Error('Something went wrong');\n    } catch (e) {\n      window.Rollbar.error(e);\n    }\n\n    return (\n      <div>RollbarSourceMapPlugin - React example</div>\n    );\n  }\n}\n\nexport default App;\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/App.js","import rollbar from 'rollbar-browser/dist/rollbar.umd.nojson';\n\nexport default rollbar.init({\n  accessToken: __ROLLBAR_ACCESS_TOKEN__,\n  captureUncaught: true,\n  payload: {\n    environment: process.env.NODE_ENV,\n    client: {\n      javascript: {\n        source_map_enabled: true,\n        code_version: __GIT_REVISION__,\n        // Optionally have Rollbar guess which frames the error was thrown from\n        // when the browser does not provide line and column numbers.\n        guess_uncaught_frames: true\n      }\n    }\n  }\n});\n\n\n\n// WEBPACK FOOTER //\n// ./src/rollbar.js","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(1);\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t/* globals __USE_JSON__ */\n\t\n\t\n\tvar globalnotifier = __webpack_require__(2);\n\tvar notifier = __webpack_require__(3);\n\t\n\t\n\tfunction setupJSON() {\n\t  var JSONObject = typeof JSON === 'undefined' ? {} : JSON;\n\t\n\t  if (false) {\n\t    // This adds the script to this context. We need it since this library\n\t    // is not a CommonJs or AMD module.\n\t    var setupCustomJSON = require('../../vendor/JSON-js/json2.js');\n\t\n\t    var customJSON = {};\n\t    setupCustomJSON(customJSON);\n\t\n\t    JSONObject = customJSON;\n\t  }\n\t\n\t  globalnotifier.setupJSON(JSONObject);\n\t}\n\t\n\t\n\tsetupJSON();\n\t\n\t\n\tvar config = window._rollbarConfig;\n\tvar alias = config && config.globalAlias || 'Rollbar';\n\tvar shimRunning = window[alias] && typeof window[alias].shimId !== 'undefined';\n\t\n\t\n\t/* We must not initialize the full notifier here if the\n\t * shim is loaded, snippet_callback will do that for us\n\t */\n\tif (!shimRunning && config) {\n\t  globalnotifier.wrapper.init(config);\n\t} else {\n\t  window.Rollbar = globalnotifier.wrapper;\n\t  // We need to expose Notifier for the snippet\n\t  window.RollbarNotifier = notifier.Notifier;\n\t}\n\t\n\tmodule.exports = globalnotifier.wrapper;\n\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar notifier = __webpack_require__(3);\n\tvar Util = __webpack_require__(8);\n\t\n\tvar Notifier = notifier.Notifier;\n\t// Stub out the wrapped error which is set\n\twindow._rollbarWrappedError = null;\n\t\n\t\n\t// Global window.onerror handler\n\tfunction _rollbarWindowOnError(client, old, args) {\n\t  if (!args[4] && window._rollbarWrappedError) {\n\t    args[4] = window._rollbarWrappedError;\n\t    window._rollbarWrappedError = null;\n\t  }\n\t\n\t  client.uncaughtError.apply(client, args);\n\t  if (old) {\n\t    old.apply(window, args);\n\t  }\n\t}\n\t\n\tfunction _extendListenerPrototype(client, prototype) {\n\t  if (prototype.hasOwnProperty && prototype.hasOwnProperty('addEventListener')) {\n\t    var oldAddEventListener = prototype.addEventListener;\n\t    prototype.addEventListener = function(event, callback, bubble) {\n\t      oldAddEventListener.call(this, event, client.wrap(callback), bubble);\n\t    };\n\t\n\t    var oldRemoveEventListener = prototype.removeEventListener;\n\t    prototype.removeEventListener = function(event, callback, bubble) {\n\t      oldRemoveEventListener.call(this, event, callback && callback._wrapped || callback, bubble);\n\t    };\n\t  }\n\t}\n\t\n\t\n\t// Add an init() method to do the same things that the shim would do\n\tvar wrapper = {};\n\twrapper.init = function(config, parent) {\n\t  var client = new Notifier(parent);\n\t  client.configure(config);\n\t\n\t  if (config.captureUncaught) {\n\t    // Set the global onerror handler\n\t    var oldOnError;\n\t\n\t    // If the parent, probably a shim, stores an oldOnError function, use that one\n\t    if (parent && Util.isType(parent._rollbarOldOnError, 'function')) {\n\t      oldOnError = parent._rollbarOldOnError;\n\t    }\n\t    // If window.onerror doesn't belongs to our shim then we save it. This avoids\n\t    // using the shim onerror and send reports twice.\n\t    else if (window.onerror && !window.onerror.belongsToShim) {\n\t      oldOnError = window.onerror;\n\t    }\n\t\n\t    window.onerror = function() {\n\t      var args = Array.prototype.slice.call(arguments, 0);\n\t      _rollbarWindowOnError(client, oldOnError, args);\n\t    };\n\t\n\t    // Adapted from https://github.com/bugsnag/bugsnag-js\n\t    var globals = ['EventTarget', 'Window', 'Node', 'ApplicationCache', 'AudioTrackList', 'ChannelMergerNode', 'CryptoOperation', 'EventSource',\n\t     'FileReader', 'HTMLUnknownElement', 'IDBDatabase', 'IDBRequest', 'IDBTransaction', 'KeyOperation', 'MediaController',\n\t     'MessagePort', 'ModalWindow', 'Notification', 'SVGElementInstance', 'Screen', 'TextTrack', 'TextTrackCue',\n\t     'TextTrackList', 'WebSocket', 'WebSocketWorker', 'Worker', 'XMLHttpRequest', 'XMLHttpRequestEventTarget',\n\t     'XMLHttpRequestUpload'];\n\t\n\t    var i;\n\t    var global;\n\t    for (i = 0; i < globals.length; ++i) {\n\t      global = globals[i];\n\t\n\t      if (window[global] && window[global].prototype) {\n\t        _extendListenerPrototype(client, window[global].prototype);\n\t      }\n\t    }\n\t  }\n\t\n\t  if (config.captureUnhandledRejections) {\n\t    if (parent && Util.isType(parent._unhandledRejectionHandler, 'function')) {\n\t      window.removeEventListener('unhandledrejection', parent._unhandledRejectionHandler)\n\t    }\n\t\n\t    client._unhandledRejectionHandler = function (event) {\n\t      var reason = event.reason;\n\t      var promise = event.promise;\n\t      // Some Promise libraries do not yet conform to the standard and place the reason and promise inside\n\t      // a detail attribute\n\t      var detail = event.detail;\n\t\n\t      if (!reason && detail) {\n\t        reason = detail.reason;\n\t        promise = detail.promise;\n\t      }\n\t\n\t      client.unhandledRejection(reason, promise);\n\t    };\n\t\n\t    window.addEventListener('unhandledrejection', client._unhandledRejectionHandler);\n\t  }\n\t\n\t  window.Rollbar = client;\n\t  // Finally, start processing payloads using the global notifier\n\t  Notifier.processPayloads();\n\t  return client;\n\t};\n\t\n\t\n\tmodule.exports = {\n\t  wrapper: wrapper,\n\t  setupJSON: notifier.setupJSON\n\t};\n\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t/* globals __NOTIFIER_VERSION__ */\n\t/* globals __DEFAULT_ENDPOINT__ */\n\t/* globals __DEFAULT_SCRUB_FIELDS__ */\n\t/* globals __DEFAULT_LOG_LEVEL__ */\n\t/* globals __DEFAULT_REPORT_LEVEL__ */\n\t/* globals __DEFAULT_UNCAUGHT_ERROR_LEVEL */\n\t/* globals __DEFAULT_ITEMS_PER_MIN__ */\n\t/* globals __DEFAULT_MAX_ITEMS__ */\n\t/* globals DOMException */\n\t\n\t\n\tvar extend = __webpack_require__(4);\n\t\n\tvar errorParser = __webpack_require__(5);\n\tvar Util = __webpack_require__(8);\n\tvar xhr = __webpack_require__(11);\n\t\n\tvar XHR = xhr.XHR;\n\tvar ConnectionError = xhr.ConnectionError;\n\tvar RollbarJSON = null;\n\t\n\tfunction setupJSON(JSON) {\n\t  RollbarJSON = JSON;\n\t  xhr.setupJSON(JSON);\n\t  Util.setupJSON(JSON);\n\t}\n\t\n\tfunction _wrapNotifierFn(fn, ctx) {\n\t  return function() {\n\t    var self = ctx || this;\n\t    try {\n\t      return fn.apply(self, arguments);\n\t    } catch (e) {\n\t      Util.consoleError('[Rollbar]:', e);\n\t    }\n\t  };\n\t}\n\t\n\t\n\tvar payloadProcessorTimeout;\n\tfunction _notifyPayloadAvailable() {\n\t  if (!payloadProcessorTimeout) {\n\t    payloadProcessorTimeout = setTimeout(_deferredPayloadProcess, 1000);\n\t  }\n\t}\n\t\n\t// Updated by the build process to match package.json\n\tNotifier.NOTIFIER_VERSION = (\"1.9.4\");\n\tNotifier.DEFAULT_ENDPOINT = (\"api.rollbar.com/api/1/\");\n\tNotifier.DEFAULT_SCRUB_FIELDS = ([\"pw\",\"pass\",\"passwd\",\"password\",\"secret\",\"confirm_password\",\"confirmPassword\",\"password_confirmation\",\"passwordConfirmation\",\"access_token\",\"accessToken\",\"secret_key\",\"secretKey\",\"secretToken\"]);\n\tNotifier.DEFAULT_LOG_LEVEL = (\"debug\");\n\tNotifier.DEFAULT_REPORT_LEVEL = (\"debug\");\n\tNotifier.DEFAULT_UNCAUGHT_ERROR_LEVEL = (\"error\");\n\tNotifier.DEFAULT_ITEMS_PER_MIN = (60);\n\tNotifier.DEFAULT_MAX_ITEMS = (0);\n\t\n\tNotifier.LEVELS = {\n\t  debug: 0,\n\t  info: 1,\n\t  warning: 2,\n\t  error: 3,\n\t  critical: 4\n\t};\n\t\n\tNotifier.RETRY_DELAY = 1000 * 10;\n\t\n\t// This is the global queue where all notifiers will put their\n\t// payloads to be sent to Rollbar.\n\twindow._rollbarPayloadQueue = window._rollbarPayloadQueue || [];\n\t\n\t// This contains global options for all Rollbar notifiers.\n\twindow._globalRollbarOptions = {\n\t  startTime: (new Date()).getTime(),\n\t  maxItems: Notifier.DEFAULT_MAX_ITEMS,\n\t  itemsPerMinute: Notifier.DEFAULT_ITEMS_PER_MIN\n\t};\n\t\n\tvar _topLevelNotifier;\n\t\n\tfunction topLevelNotifier() {\n\t  return _topLevelNotifier;\n\t}\n\t\n\tfunction Notifier(parentNotifier) {\n\t  // Save the first notifier so we can use it to send system messages like\n\t  // when the rate limit is reached.\n\t  _topLevelNotifier = _topLevelNotifier || this;\n\t\n\t  var endpoint = 'https://' + Notifier.DEFAULT_ENDPOINT;\n\t  this.options = {\n\t    enabled: true,\n\t    endpoint: endpoint,\n\t    environment: 'production',\n\t    scrubFields: extend([], Notifier.DEFAULT_SCRUB_FIELDS),\n\t    checkIgnore: null,\n\t    logLevel: Notifier.DEFAULT_LOG_LEVEL,\n\t    reportLevel: Notifier.DEFAULT_REPORT_LEVEL,\n\t    uncaughtErrorLevel: Notifier.DEFAULT_UNCAUGHT_ERROR_LEVEL,\n\t    payload: {}\n\t  };\n\t\n\t  this.lastError = null;\n\t  this.plugins = {};\n\t  this.parentNotifier = parentNotifier;\n\t\n\t  if (parentNotifier) {\n\t    // If the parent notifier has the shimId\n\t    // property it means that it's a Rollbar shim.\n\t    if (parentNotifier.hasOwnProperty('shimId')) {\n\t      // After we set this, the shim is just a proxy to this\n\t      // Notifier instance.\n\t      parentNotifier.notifier = this;\n\t    } else {\n\t      this.configure(parentNotifier.options);\n\t    }\n\t  }\n\t}\n\t\n\t\n\tvar NotifierPrototype = Notifier.prototype;\n\t\n\t\n\t/*\n\t * Returns an Object with keys:\n\t * {\n\t *  message: String,\n\t *  err: Error,\n\t *  custom: Object\n\t * }\n\t */\n\tNotifierPrototype._getLogArgs = function(args) {\n\t  var level = this.options.logLevel || Notifier.DEFAULT_LOG_LEVEL;\n\t  var message;\n\t  var err;\n\t  var custom;\n\t  var callback;\n\t  var argT;\n\t  var arg;\n\t  var extraArgs = [];\n\t\n\t  for (var i = 0; i < args.length; ++i) {\n\t    arg = args[i];\n\t\n\t    argT = Util.typeName(arg);\n\t    if (argT === 'string') {\n\t      if (message) {\n\t        extraArgs.push(arg);\n\t      } else {\n\t        message = arg;\n\t      }\n\t    } else if (argT === 'function') {\n\t      callback = _wrapNotifierFn(arg, this);  // wrap the callback in a try/catch block\n\t    } else if (argT === 'date') {\n\t      extraArgs.push(arg);\n\t    } else if (argT === 'error' ||\n\t               arg instanceof Error ||\n\t               (typeof DOMException !== 'undefined' && arg instanceof DOMException)) {\n\t      if (err) {\n\t        extraArgs.push(arg);\n\t      } else {\n\t        err = arg;\n\t      }\n\t    } else if (argT === 'object' || argT === 'array') {\n\t      if (custom) {\n\t        extraArgs.push(arg);\n\t      } else {\n\t        custom = arg;\n\t      }\n\t    }\n\t  }\n\t\n\t  // Save any of the extra arguments passed into the log function\n\t  // into `extraArgs` so they they show up in the payload.\n\t  if (extraArgs.length) {\n\t    custom = custom || {};\n\t    custom.extraArgs = extraArgs;\n\t  }\n\t\n\t  // TODO(cory): somehow pass in timestamp too...\n\t\n\t  return {\n\t    level: level,\n\t    message: message,\n\t    err: err,\n\t    custom: custom,\n\t    callback: callback\n\t  };\n\t};\n\t\n\t\n\tNotifierPrototype._route = function(path) {\n\t  var endpoint = this.options.endpoint;\n\t\n\t  var endpointTrailingSlash = /\\/$/.test(endpoint);\n\t  var pathBeginningSlash = /^\\//.test(path);\n\t\n\t  if (endpointTrailingSlash && pathBeginningSlash) {\n\t    path = path.substring(1);\n\t  } else if (!endpointTrailingSlash && !pathBeginningSlash) {\n\t    path = '/' + path;\n\t  }\n\t\n\t  return endpoint + path;\n\t};\n\t\n\t\n\t/*\n\t * Given a queue containing each call to the shim, call the\n\t * corresponding method on this instance.\n\t *\n\t * shim queue contains:\n\t *\n\t * {shim: Rollbar, method: 'info', args: ['hello world', exc], ts: Date}\n\t */\n\tNotifierPrototype._processShimQueue = function(shimQueue) {\n\t  var shim;\n\t  var obj;\n\t  var method;\n\t  var args;\n\t  var shimToNotifier = {};\n\t  var parentShim;\n\t  var parentNotifier;\n\t  var notifier;\n\t\n\t  // For each of the messages in the shimQueue we need to:\n\t  // 1. get/create the notifier for that shim\n\t  // 2. apply the message to the notifier\n\t  while ((obj = shimQueue.shift())) {\n\t    shim = obj.shim;\n\t    method = obj.method;\n\t    args = obj.args;\n\t    parentShim = shim.parentShim;\n\t\n\t    // Get the current notifier based on the shimId\n\t    notifier = shimToNotifier[shim.shimId];\n\t    if (!notifier) {\n\t\n\t      // If there is no notifier associated with the shimId\n\t      // Check to see if there's a parent shim\n\t      if (parentShim) {\n\t\n\t        // If there is a parent shim, get the parent notifier\n\t        // and create a new notifier for the current shim.\n\t        parentNotifier = shimToNotifier[parentShim.shimId];\n\t\n\t        // Create a new Notifier which will process all of the shim's\n\t        // messages\n\t        notifier = new Notifier(parentNotifier);\n\t      } else {\n\t        // If there is no parent, assume the shim is the top\n\t        // level shim and thus, should use this as the notifier.\n\t        notifier = this;\n\t      }\n\t\n\t      // Save off the shimId->notifier mapping\n\t      shimToNotifier[shim.shimId] = notifier;\n\t    }\n\t\n\t    if (notifier[method] && Util.isType(notifier[method], 'function')) {\n\t      notifier[method].apply(notifier, args);\n\t    }\n\t  }\n\t};\n\t\n\t\n\t/*\n\t * Builds and returns an Object that will be enqueued onto the\n\t * window._rollbarPayloadQueue array to be sent to Rollbar.\n\t */\n\tNotifierPrototype._buildPayload = function(ts, level, message, stackInfo, custom) {\n\t  var accessToken = this.options.accessToken;\n\t\n\t  // NOTE(cory): DEPRECATED\n\t  // Pass in {payload: {environment: 'production'}} instead of just {environment: 'production'}\n\t  var environment = this.options.environment;\n\t\n\t  var notifierOptions = extend(true, {}, this.options.payload);\n\t  var uuid = Util.uuid4();\n\t\n\t  if (Notifier.LEVELS[level] === undefined) {\n\t    throw new Error('Invalid level');\n\t  }\n\t\n\t  if (!message && !stackInfo && !custom) {\n\t    throw new Error('No message, stack info or custom data');\n\t  }\n\t\n\t  var payloadData = {\n\t    environment: environment,\n\t    endpoint: this.options.endpoint,\n\t    uuid: uuid,\n\t    level: level,\n\t    platform: 'browser',\n\t    framework: 'browser-js',\n\t    language: 'javascript',\n\t    body: this._buildBody(message, stackInfo, custom),\n\t    request: {\n\t      url: window.location.href,\n\t      query_string: window.location.search,\n\t      user_ip: '$remote_ip'\n\t    },\n\t    client: {\n\t      runtime_ms: ts.getTime() - window._globalRollbarOptions.startTime,\n\t      timestamp: Math.round(ts.getTime() / 1000),\n\t      javascript: {\n\t        browser: window.navigator.userAgent,\n\t        language: window.navigator.language,\n\t        cookie_enabled: window.navigator.cookieEnabled,\n\t        screen: {\n\t          width: window.screen.width,\n\t          height: window.screen.height\n\t        },\n\t        plugins: this._getBrowserPlugins()\n\t      }\n\t    },\n\t    server: {},\n\t    notifier: {\n\t      name: 'rollbar-browser-js',\n\t      version: Notifier.NOTIFIER_VERSION\n\t    }\n\t  };\n\t\n\t  if (notifierOptions.body) {\n\t    delete notifierOptions.body;\n\t  }\n\t\n\t  // Overwrite the options from configure() with the payload\n\t  // data.\n\t  var payload = {\n\t    access_token: accessToken,\n\t    data: extend(true, payloadData, notifierOptions)\n\t  };\n\t\n\t  // Only scrub the data section since we never want to scrub \"access_token\"\n\t  // even if it's in the scrub fields\n\t  this._scrub(payload.data);\n\t\n\t  return payload;\n\t};\n\t\n\t\n\tNotifierPrototype._buildBody = function(message, stackInfo, custom) {\n\t  var body;\n\t  if (stackInfo) {\n\t    body = _buildPayloadBodyTrace(message, stackInfo, custom);\n\t  } else {\n\t    body = _buildPayloadBodyMessage(message, custom);\n\t  }\n\t  return body;\n\t};\n\t\n\t\n\tNotifierPrototype._getBrowserPlugins = function() {\n\t  if (!this._browserPlugins) {\n\t    var navPlugins = window.navigator.plugins || [];\n\t    var cur;\n\t    var numPlugins = navPlugins.length;\n\t    var plugins = [];\n\t    var i;\n\t    for (i = 0; i < numPlugins; ++i) {\n\t      cur = navPlugins[i];\n\t      plugins.push({name: cur.name, description: cur.description});\n\t    }\n\t    this._browserPlugins = plugins;\n\t  }\n\t  return this._browserPlugins;\n\t};\n\t\n\t\n\t/*\n\t * Does an in-place modification of obj such that:\n\t * 1. All keys that match the notifier's options.scrubFields\n\t *    list will be normalized into all '*'\n\t * 2. Any query string params that match the same criteria will have\n\t *    their values normalized as well.\n\t */\n\tNotifierPrototype._scrub = function(obj) {\n\t  var scrubFields = this.options.scrubFields;\n\t  var paramRes = this._getScrubFieldRegexs(scrubFields);\n\t  var queryRes = this._getScrubQueryParamRegexs(scrubFields);\n\t\n\t  function redactQueryParam(dummy0, paramPart, dummy1, dummy2, dummy3, valPart) {\n\t    return paramPart + Util.redact(valPart);\n\t  }\n\t\n\t  function paramScrubber(v) {\n\t    var i;\n\t    if (Util.isType(v, 'string')) {\n\t      for (i = 0; i < queryRes.length; ++i) {\n\t        v = v.replace(queryRes[i], redactQueryParam);\n\t      }\n\t    }\n\t    return v;\n\t  }\n\t\n\t  function valScrubber(k, v) {\n\t    var i;\n\t    for (i = 0; i < paramRes.length; ++i) {\n\t      if (paramRes[i].test(k)) {\n\t        v = Util.redact(v);\n\t        break;\n\t      }\n\t    }\n\t    return v;\n\t  }\n\t\n\t  function scrubber(k, v) {\n\t    var tmpV = valScrubber(k, v);\n\t    if (tmpV === v) {\n\t      return paramScrubber(tmpV);\n\t    } else {\n\t      return tmpV;\n\t    }\n\t  }\n\t\n\t  Util.traverse(obj, scrubber);\n\t  return obj;\n\t};\n\t\n\t\n\tNotifierPrototype._getScrubFieldRegexs = function(scrubFields) {\n\t  var ret = [];\n\t  var pat;\n\t  for (var i = 0; i < scrubFields.length; ++i) {\n\t    pat = '\\\\[?(%5[bB])?' + scrubFields[i] + '\\\\[?(%5[bB])?\\\\]?(%5[dD])?';\n\t    ret.push(new RegExp(pat, 'i'));\n\t  }\n\t  return ret;\n\t};\n\t\n\t\n\tNotifierPrototype._getScrubQueryParamRegexs = function(scrubFields) {\n\t  var ret = [];\n\t  var pat;\n\t  for (var i = 0; i < scrubFields.length; ++i) {\n\t    pat = '\\\\[?(%5[bB])?' + scrubFields[i] + '\\\\[?(%5[bB])?\\\\]?(%5[dD])?';\n\t    ret.push(new RegExp('(' + pat + '=)([^&\\\\n]+)', 'igm'));\n\t  }\n\t  return ret;\n\t};\n\t\n\tNotifierPrototype._urlIsWhitelisted = function(payload){\n\t  var whitelist, trace, frame, filename, frameLength, url, listLength, urlRegex;\n\t  var i, j;\n\t\n\t  try {\n\t    whitelist = this.options.hostWhiteList;\n\t    trace = payload && payload.data && payload.data.body && payload.data.body.trace;\n\t\n\t    if (!whitelist || whitelist.length === 0) { return true; }\n\t    if (!trace) { return true; }\n\t\n\t    listLength = whitelist.length;\n\t    frameLength = trace.frames.length;\n\t    for (i = 0; i < frameLength; i++) {\n\t      frame = trace.frames[i];\n\t      filename = frame.filename;\n\t\n\t      if (!Util.isType(filename, 'string')) {\n\t        return true;\n\t      }\n\t\n\t      for (j = 0; j < listLength; j++) {\n\t        url = whitelist[j];\n\t        urlRegex = new RegExp(url);\n\t\n\t        if (urlRegex.test(filename)){\n\t          return true;\n\t        }\n\t      }\n\t    }\n\t  } catch (e) {\n\t    this.configure({hostWhiteList: null});\n\t    Util.consoleError(\"[Rollbar]: Error while reading your configuration's hostWhiteList option. Removing custom hostWhiteList.\", e);\n\t    return true;\n\t  }\n\t\n\t  return false;\n\t};\n\t\n\tNotifierPrototype._messageIsIgnored = function(payload){\n\t  var exceptionMessage, i, ignoredMessages, len, messageIsIgnored, rIgnoredMessage, trace, body, traceMessage, bodyMessage;\n\t  try {\n\t    messageIsIgnored = false;\n\t    ignoredMessages = this.options.ignoredMessages;\n\t    \n\t    if (!ignoredMessages || ignoredMessages.length === 0) {\n\t      return false;\n\t    }\n\t\n\t    body =  payload &&\n\t            payload.data &&\n\t            payload.data.body;\n\t\n\t    traceMessage =  body && \n\t                    body.trace &&\n\t                    body.trace.exception && \n\t                    body.trace.exception.message;\n\t    \n\t    bodyMessage = body && \n\t                  body.message && \n\t                  body.message.body;\n\t\n\t    exceptionMessage = traceMessage || bodyMessage;\n\t\n\t    if (!exceptionMessage){\n\t      return false;\n\t    }\n\t\n\t    len = ignoredMessages.length;\n\t    for (i = 0; i < len; i++) {\n\t      rIgnoredMessage = new RegExp(ignoredMessages[i], 'gi');\n\t      messageIsIgnored = rIgnoredMessage.test(exceptionMessage);\n\t\n\t      if (messageIsIgnored) {\n\t        break;\n\t      }\n\t    }\n\t  }\n\t  catch(e) {\n\t    this.configure({ignoredMessages: null});\n\t    Util.consoleError(\"[Rollbar]: Error while reading your configuration's ignoredMessages option. Removing custom ignoredMessages.\");\n\t  }\n\t\n\t  return messageIsIgnored;\n\t};\n\t\n\tNotifierPrototype._enqueuePayload = function(payload, isUncaught, callerArgs, callback) {\n\t\n\t  var payloadToSend = {\n\t    callback: callback,\n\t    accessToken: this.options.accessToken,\n\t    endpointUrl: this._route('item/'),\n\t    payload: payload\n\t  };\n\t\n\t  var ignoredCallback = function() {\n\t    if (callback) {\n\t      // If the item was ignored call the callback anyway\n\t      var msg = 'This item was not sent to Rollbar because it was ignored. ' +\n\t                'This can happen if a custom checkIgnore() function was used ' +\n\t                'or if the item\\'s level was less than the notifier\\' reportLevel. ' +\n\t                'See https://rollbar.com/docs/notifier/rollbar.js/configuration for more details.';\n\t\n\t      callback(null, {err: 0, result: {id: null, uuid: null, message: msg}});\n\t    }\n\t  };\n\t\n\t  // Internal checkIgnore will check the level against the minimum\n\t  // report level from this.options\n\t  if (this._internalCheckIgnore(isUncaught, callerArgs, payload)) {\n\t    ignoredCallback();\n\t    return;\n\t  }\n\t\n\t  // Users can set their own ignore criteria using this.options.checkIgnore()\n\t  try {\n\t    if (Util.isType(this.options.checkIgnore, 'function') &&\n\t        this.options.checkIgnore(isUncaught, callerArgs, payload)) {\n\t      ignoredCallback();\n\t      return;\n\t    }\n\t  } catch (e) {\n\t    // Disable the custom checkIgnore and report errors in the checkIgnore function\n\t    this.configure({checkIgnore: null});\n\t    Util.consoleError('[Rollbar]: Error while calling custom checkIgnore() function. Removing custom checkIgnore().', e);\n\t  }\n\t\n\t  if (!this._urlIsWhitelisted(payload)) {\n\t    return;\n\t  }\n\t\n\t  if (this._messageIsIgnored(payload)) {\n\t    return;\n\t  }\n\t\n\t  if (this.options.verbose) {\n\t    if (payload.data && payload.data.body && payload.data.body.trace) {\n\t      var trace = payload.data.body.trace;\n\t      var exceptionMessage = trace.exception.message;\n\t      Util.consoleError('[Rollbar]: ', exceptionMessage);\n\t    }\n\t\n\t    Util.consoleInfo('[Rollbar]: ', payloadToSend);\n\t  }\n\t\n\t  if (Util.isType(this.options.logFunction, 'function')) {\n\t    this.options.logFunction(payloadToSend);\n\t  }\n\t\n\t  try {\n\t    if (Util.isType(this.options.transform, 'function')) {\n\t      this.options.transform(payload);\n\t    }\n\t  } catch (e) {\n\t    this.configure({transform: null});\n\t    Util.consoleError('[Rollbar]: Error while calling custom transform() function. Removing custom transform().', e);\n\t  }\n\t\n\t  if (this.options.enabled) {\n\t    directlyEnqueuePayload(payloadToSend);\n\t  }\n\t\n\t};\n\t\n\tfunction directlyEnqueuePayload(payloadToSend) {\n\t  window._rollbarPayloadQueue.push(payloadToSend);\n\t  _notifyPayloadAvailable();\n\t}\n\t\n\tNotifierPrototype._internalCheckIgnore = function(isUncaught, callerArgs, payload) {\n\t  var level = callerArgs[0];\n\t  var levelVal = Notifier.LEVELS[level] || 0;\n\t  var reportLevel = Notifier.LEVELS[this.options.reportLevel] || 0;\n\t\n\t  if (levelVal < reportLevel) {\n\t    return true;\n\t  }\n\t\n\t  var plugins = this.options ? this.options.plugins : {};\n\t  if (plugins && plugins.jquery && plugins.jquery.ignoreAjaxErrors) {\n\t    try {\n\t      // The jQuery plugin adds in this key. Return true if it exists since\n\t      // we are ignoring ajax errors via the plugin config.\n\t      return !!(payload.data.body.message.extra.isAjax);\n\t    } catch (e) {\n\t      return false;\n\t    }\n\t  }\n\t\n\t  return false;\n\t};\n\t\n\t\n\t/*\n\t * Logs stuff to Rollbar using the default\n\t * logging level.\n\t *\n\t * Can be called with the following, (order doesn't matter but type does):\n\t * - message: String\n\t * - err: Error object, must have a .stack property or it will be\n\t *   treated as custom data\n\t * - custom: Object containing custom data to be sent along with\n\t *   the item\n\t * - callback: Function to call once the item is reported to Rollbar\n\t * - isUncaught: True if this error originated from an uncaught exception handler\n\t * - ignoreRateLimit: True if this item should be allowed despite rate limit checks\n\t *\n\t * Returns an object with (at least) the \"uuid\" property set.\n\t */\n\tNotifierPrototype._log = function(level, message, err, custom, callback, isUncaught, ignoreRateLimit) {\n\t  var stackInfo = null;\n\t  if (err) {\n\t    try {\n\t      // If we've already calculated the stack trace for the error, use it.\n\t      // This can happen for wrapped errors that don't have a \"stack\" property.\n\t      stackInfo = err._savedStackTrace ? err._savedStackTrace : errorParser.parse(err);\n\t\n\t      // Don't report the same error more than once\n\t      if (err === this.lastError) {\n\t        return;\n\t      }\n\t\n\t      this.lastError = err;\n\t    } catch (e) {\n\t      Util.consoleError('[Rollbar]: Error while parsing the error object.', e);\n\t      // err is not something we can parse so let's just send it along as a string\n\t      message = err.message || err.description || message || String(err);\n\t      err = null;\n\t    }\n\t  }\n\t\n\t  var payload = this._buildPayload(new Date(), level, message, stackInfo, custom);\n\t  if (ignoreRateLimit) {\n\t    payload.ignoreRateLimit = true;\n\t  }\n\t  this._enqueuePayload(payload, isUncaught ? true : false, [level, message, err, custom], callback);\n\t\n\t  // We're generating the UUID client-side, may as well return it so it can be\n\t  // used even before the payload has been sent to Rollbar.  #236\n\t  // I'm returning an object here, in case we eventually want to add other\n\t  // contextual information besides the uuid.\n\t  return {uuid: payload.data.uuid};\n\t};\n\t\n\tNotifierPrototype.log = _generateLogFn();\n\tNotifierPrototype.debug = _generateLogFn('debug');\n\tNotifierPrototype.info = _generateLogFn('info');\n\tNotifierPrototype.warn = _generateLogFn('warning'); // for console.warn() compatibility\n\tNotifierPrototype.warning = _generateLogFn('warning');\n\tNotifierPrototype.error = _generateLogFn('error');\n\tNotifierPrototype.critical = _generateLogFn('critical');\n\t\n\t// Adapted from tracekit.js\n\tNotifierPrototype.uncaughtError = _wrapNotifierFn(function(message, url, lineNo, colNo, err, context) {\n\t  context = context || null;\n\t  if (err && Util.isType(err, 'error')) {\n\t    this._log(this.options.uncaughtErrorLevel, message, err, context, null, true);\n\t    return;\n\t  }\n\t\n\t  // NOTE(cory): sometimes users will trigger an \"error\" event\n\t  // on the window object directly which will result in errMsg\n\t  // being an Object instead of a string.\n\t  //\n\t  if (url && Util.isType(url, 'error')) {\n\t    this._log(this.options.uncaughtErrorLevel, message, url, context, null, true);\n\t    return;\n\t  }\n\t\n\t  var location = {\n\t    'url': url || '',\n\t    'line': lineNo\n\t  };\n\t  location.func = errorParser.guessFunctionName(location.url, location.line);\n\t  location.context = errorParser.gatherContext(location.url, location.line);\n\t  var stack = {\n\t    'mode': 'onerror',\n\t    'message': err ? String(err) : (message || 'uncaught exception'),\n\t    'url': document.location.href,\n\t    'stack': [location],\n\t    'useragent': navigator.userAgent\n\t  };\n\t\n\t  var payload = this._buildPayload(new Date(), this.options.uncaughtErrorLevel,\n\t    message, stack, context);\n\t  this._enqueuePayload(payload, true, [this.options.uncaughtErrorLevel,\n\t    message, url, lineNo, colNo, err]);\n\t});\n\t\n\tNotifierPrototype.unhandledRejection = _wrapNotifierFn(function(reason, promise) {\n\t  var message;\n\t  // If the reason error was thrown within a wrap call, we'll extract the context given there.\n\t  // If users want to provide their Promise implementation with knowledge of the rollbar\n\t  // context they are created in, we'll search for that attribute, too.\n\t  var context;\n\t\n\t  if (reason) {\n\t    message = reason.message || String(reason);\n\t    context = reason._rollbarContext;\n\t  } else {\n\t    message = 'unhandled rejection was null or undefined!';\n\t  }\n\t\n\t  context = context || promise._rollbarContext || null;\n\t\n\t  if (reason && Util.isType(reason, 'error')) {\n\t    this._log(this.options.uncaughtErrorLevel, message, reason, context, null, true);\n\t    return;\n\t  }\n\t\n\t  var location = {\n\t    'url': '',\n\t    'line': 0\n\t  };\n\t  location.func = errorParser.guessFunctionName(location.url, location.line);\n\t  location.context = errorParser.gatherContext(location.url, location.line);\n\t  var stack = {\n\t    'mode': 'unhandledrejection',\n\t    'message': message,\n\t    'url': document.location.href,\n\t    'stack': [location],\n\t    'useragent': navigator.userAgent\n\t  };\n\t\n\t  var payload = this._buildPayload(new Date(), this.options.uncaughtErrorLevel,\n\t    message, stack, context);\n\t  this._enqueuePayload(payload, true, [this.options.uncaughtErrorLevel,\n\t    message, location.url, location.line, 0, reason, promise]);\n\t});\n\t\n\t\n\tNotifierPrototype.global = _wrapNotifierFn(function(options) {\n\t  options = options || {};\n\t  var knownOptions = {\n\t    startTime: options.startTime,\n\t    maxItems: options.maxItems,\n\t    itemsPerMinute: options.itemsPerMinute\n\t  };\n\t\n\t  extend(true, window._globalRollbarOptions, knownOptions);\n\t\n\t  if (options.maxItems !== undefined) {\n\t    rateLimitCounter = 0;\n\t  }\n\t\n\t  if (options.itemsPerMinute !== undefined) {\n\t    rateLimitPerMinCounter = 0;\n\t  }\n\t});\n\t\n\t\n\tNotifierPrototype.configure = _wrapNotifierFn(function(options, overwrite) {\n\t  // TODO(cory): only allow non-payload keys that we understand\n\t\n\t  // Make a copy of the options object for this notifier\n\t  var newOptionsCopy = extend(true, {}, options);\n\t  extend(!overwrite, this.options, newOptionsCopy);\n\t  this.global(newOptionsCopy);\n\t});\n\t\n\t/*\n\t * Create a new Notifier instance which has the same options\n\t * as the current notifier + options to override them.\n\t */\n\tNotifierPrototype.scope = _wrapNotifierFn(function(payloadOptions) {\n\t  var scopedNotifier = new Notifier(this);\n\t  extend(true, scopedNotifier.options.payload, payloadOptions);\n\t  return scopedNotifier;\n\t});\n\t\n\tNotifierPrototype.wrap = function(f, context) {\n\t  try {\n\t    var ctxFn;\n\t    if (Util.isType(context, 'function')) {\n\t      ctxFn = context;\n\t    } else {\n\t      ctxFn = function() {\n\t        return context || {};\n\t      };\n\t    }\n\t\n\t    if (!Util.isType(f, 'function')) {\n\t      return f;\n\t    }\n\t\n\t    // If the given function is already a wrapped function, just\n\t    // return it instead of wrapping twice\n\t    if (f._isWrap) {\n\t      return f;\n\t    }\n\t\n\t    if (!f._wrapped) {\n\t      f._wrapped = function () {\n\t        try {\n\t          return f.apply(this, arguments);\n\t        } catch(e) {\n\t          if (typeof e === 'string') {\n\t            e = new String(e);\n\t          }\n\t          if (!e.stack) {\n\t            e._savedStackTrace = errorParser.parse(e);\n\t          }\n\t          e._rollbarContext = ctxFn() || {};\n\t          e._rollbarContext._wrappedSource = f.toString();\n\t\n\t          window._rollbarWrappedError = e;\n\t          throw e;\n\t        }\n\t      };\n\t\n\t      f._wrapped._isWrap = true;\n\t\n\t      for (var prop in f) {\n\t        if (f.hasOwnProperty(prop)) {\n\t          f._wrapped[prop] = f[prop];\n\t        }\n\t      }\n\t    }\n\t\n\t    return f._wrapped;\n\t  } catch (e) {\n\t    // Try-catch here is to work around issue where wrap() fails when used inside Selenium.\n\t    // Return the original function if the wrap fails.\n\t    return f;\n\t  }\n\t};\n\t\n\t\n\tNotifierPrototype.loadFull = function() {\n\t  Util.consoleError('[Rollbar]: Unexpected Rollbar.loadFull() called on a Notifier instance');\n\t};\n\t\n\t\n\t/***** Misc *****/\n\t\n\tfunction _generateLogFn(level) {\n\t  return _wrapNotifierFn(function _logFn() {\n\t    var args = this._getLogArgs(arguments);\n\t\n\t    return this._log(level || args.level || this.options.logLevel || Notifier.DEFAULT_LOG_LEVEL,\n\t      args.message, args.err, args.custom, args.callback);\n\t  });\n\t}\n\t\n\t\n\tfunction _buildPayloadBodyMessage(message, custom) {\n\t  if (!message) {\n\t    if (custom) {\n\t      message = RollbarJSON.stringify(custom);\n\t    } else {\n\t      message = '';\n\t    }\n\t  }\n\t  var result = {\n\t    body: message\n\t  };\n\t\n\t  if (custom) {\n\t    result.extra = extend(true, {}, custom);\n\t  }\n\t\n\t  return {\n\t    message: result\n\t  };\n\t}\n\t\n\t\n\tfunction _buildPayloadBodyTrace(description, stackInfo, custom) {\n\t  var guess = errorParser.guessErrorClass(stackInfo.message);\n\t  var className = stackInfo.name || guess[0];\n\t  var message = guess[1];\n\t  var trace = {\n\t    exception: {\n\t      'class': className,\n\t      message: message\n\t    }\n\t  };\n\t\n\t  if (description) {\n\t    trace.exception.description = description || 'uncaught exception';\n\t  }\n\t\n\t  // Transform a TraceKit stackInfo object into a Rollbar trace\n\t  if (stackInfo.stack) {\n\t    var stackFrame;\n\t    var frame;\n\t    var code;\n\t    var pre;\n\t    var post;\n\t    var contextLength;\n\t    var i, mid;\n\t\n\t    trace.frames = [];\n\t    for (i = 0; i < stackInfo.stack.length; ++i) {\n\t      stackFrame = stackInfo.stack[i];\n\t      frame = {\n\t        filename: stackFrame.url ? Util.sanitizeUrl(stackFrame.url) : '(unknown)',\n\t        lineno: stackFrame.line || null,\n\t        method: (!stackFrame.func || stackFrame.func === '?') ? '[anonymous]' : stackFrame.func,\n\t        colno: stackFrame.column\n\t      };\n\t\n\t      code = pre = post = null;\n\t      contextLength = stackFrame.context ? stackFrame.context.length : 0;\n\t      if (contextLength) {\n\t        mid = Math.floor(contextLength / 2);\n\t        pre = stackFrame.context.slice(0, mid);\n\t        code = stackFrame.context[mid];\n\t        post = stackFrame.context.slice(mid);\n\t      }\n\t\n\t      if (code) {\n\t        frame.code = code;\n\t      }\n\t\n\t      if (pre || post) {\n\t        frame.context = {};\n\t        if (pre && pre.length) {\n\t          frame.context.pre = pre;\n\t        }\n\t        if (post && post.length) {\n\t          frame.context.post = post;\n\t        }\n\t      }\n\t\n\t      if (stackFrame.args) {\n\t        frame.args = stackFrame.args;\n\t      }\n\t\n\t      trace.frames.push(frame);\n\t    }\n\t\n\t    // NOTE(cory): reverse the frames since rollbar.com expects the most recent call last\n\t    trace.frames.reverse();\n\t\n\t    if (custom) {\n\t      trace.extra = extend(true, {}, custom);\n\t    }\n\t    return {trace: trace};\n\t  } else {\n\t    // no frames - not useful as a trace. just report as a message.\n\t    return _buildPayloadBodyMessage(className + ': ' + message, custom);\n\t  }\n\t}\n\t\n\t\n\t/***** Payload processor *****/\n\t\n\t\n\tNotifier.processPayloads = function(immediate) {\n\t  if (immediate) {\n\t    _deferredPayloadProcess();\n\t\n\t    return;\n\t  }\n\t\n\t  _notifyPayloadAvailable();\n\t};\n\t\n\t\n\tfunction _deferredPayloadProcess() {\n\t  var payloadObj;\n\t\n\t  try {\n\t    while ((payloadObj = window._rollbarPayloadQueue.shift())) {\n\t      _processPayload(payloadObj);\n\t    }\n\t  } finally {\n\t    payloadProcessorTimeout = undefined;\n\t  }\n\t}\n\t\n\t\n\tvar rateLimitStartTime = new Date().getTime();\n\tvar rateLimitCounter = 0;\n\tvar rateLimitPerMinCounter = 0;\n\tfunction _processPayload(payloadObject) {\n\t  var url = payloadObject.endpointUrl;\n\t  var accessToken = payloadObject.accessToken;\n\t  var payload = payloadObject.payload;\n\t  var callback = payloadObject.callback || function cb() {};\n\t\n\t  var now = new Date().getTime();\n\t  if (now - rateLimitStartTime >= 60000) {\n\t    rateLimitStartTime = now;\n\t    rateLimitPerMinCounter = 0;\n\t  }\n\t\n\t  // Check to see if we have a rate limit set or if\n\t  // the rate limit has been met/exceeded.\n\t  var globalRateLimit = window._globalRollbarOptions.maxItems;\n\t  var globalRateLimitPerMin = window._globalRollbarOptions.itemsPerMinute;\n\t  var checkOverRateLimit = function() { return !payload.ignoreRateLimit && globalRateLimit >= 1 && rateLimitCounter >= globalRateLimit; };\n\t  var checkOverRateLimitPerMin = function() { return !payload.ignoreRateLimit && globalRateLimitPerMin >= 1 && rateLimitPerMinCounter >= globalRateLimitPerMin; };\n\t\n\t  if (checkOverRateLimit()) {\n\t    callback(new Error(globalRateLimit + ' max items reached'));\n\t    return;\n\t  } else if (checkOverRateLimitPerMin()) {\n\t    callback(new Error(globalRateLimitPerMin + ' items per minute reached'));\n\t    return;\n\t  } else {\n\t    rateLimitCounter++;\n\t    rateLimitPerMinCounter++;\n\t\n\t    // Check to see if we have just reached the rate limit. If so, notify the customer.\n\t    if (checkOverRateLimit()) {\n\t      _topLevelNotifier._log(_topLevelNotifier.options.uncaughtErrorLevel, //level\n\t          'maxItems has been hit. Ignoring errors for the remainder of the current page load.', // message\n\t          null, // err\n\t          {maxItems: globalRateLimit}, // custom\n\t          null,  // callback\n\t          false, // isUncaught\n\t          true); // ignoreRateLimit\n\t    }\n\t    // remove this key since it's only used for internal notifier logic\n\t    if (payload.ignoreRateLimit) {\n\t      delete payload.ignoreRateLimit;\n\t    }\n\t  }\n\t\n\t  // There's either no rate limit or we haven't met it yet so\n\t  // go ahead and send it.\n\t  XHR.post(url, accessToken, payload, function xhrCallback(err, resp) {\n\t    if (err) {\n\t      if (err instanceof ConnectionError) {\n\t        // We're calling the callback now with the error, disable the callback for future attempts.\n\t        payloadObject.callback = function () { };\n\t        setTimeout(function () {\n\t          directlyEnqueuePayload(payloadObject);\n\t        }, Notifier.RETRY_DELAY);\n\t      }\n\t\n\t      return callback(err);\n\t    }\n\t\n\t    // TODO(cory): parse resp as JSON\n\t    return callback(null, resp);\n\t  });\n\t\n\t}\n\t\n\t\n\tmodule.exports = {\n\t  Notifier: Notifier,\n\t  setupJSON: setupJSON,\n\t  topLevelNotifier: topLevelNotifier\n\t};\n\t\n\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tvar hasOwn = Object.prototype.hasOwnProperty;\n\tvar toStr = Object.prototype.toString;\n\t\n\tvar isArray = function isArray(arr) {\n\t\tif (typeof Array.isArray === 'function') {\n\t\t\treturn Array.isArray(arr);\n\t\t}\n\t\n\t\treturn toStr.call(arr) === '[object Array]';\n\t};\n\t\n\tvar isPlainObject = function isPlainObject(obj) {\n\t\tif (!obj || toStr.call(obj) !== '[object Object]') {\n\t\t\treturn false;\n\t\t}\n\t\n\t\tvar hasOwnConstructor = hasOwn.call(obj, 'constructor');\n\t\tvar hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t\t// Not own constructor property must be Object\n\t\tif (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n\t\t\treturn false;\n\t\t}\n\t\n\t\t// Own properties are enumerated firstly, so to speed up,\n\t\t// if last one is own, then all properties are own.\n\t\tvar key;\n\t\tfor (key in obj) {/**/}\n\t\n\t\treturn typeof key === 'undefined' || hasOwn.call(obj, key);\n\t};\n\t\n\tmodule.exports = function extend() {\n\t\tvar options, name, src, copy, copyIsArray, clone,\n\t\t\ttarget = arguments[0],\n\t\t\ti = 1,\n\t\t\tlength = arguments.length,\n\t\t\tdeep = false;\n\t\n\t\t// Handle a deep copy situation\n\t\tif (typeof target === 'boolean') {\n\t\t\tdeep = target;\n\t\t\ttarget = arguments[1] || {};\n\t\t\t// skip the boolean and the target\n\t\t\ti = 2;\n\t\t} else if ((typeof target !== 'object' && typeof target !== 'function') || target == null) {\n\t\t\ttarget = {};\n\t\t}\n\t\n\t\tfor (; i < length; ++i) {\n\t\t\toptions = arguments[i];\n\t\t\t// Only deal with non-null/undefined values\n\t\t\tif (options != null) {\n\t\t\t\t// Extend the base object\n\t\t\t\tfor (name in options) {\n\t\t\t\t\tsrc = target[name];\n\t\t\t\t\tcopy = options[name];\n\t\n\t\t\t\t\t// Prevent never-ending loop\n\t\t\t\t\tif (target !== copy) {\n\t\t\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\t\t\tif (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n\t\t\t\t\t\t\tif (copyIsArray) {\n\t\t\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\t\t\tclone = src && isArray(src) ? src : [];\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tclone = src && isPlainObject(src) ? src : {};\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\t\t\ttarget[name] = extend(deep, clone, copy);\n\t\n\t\t\t\t\t\t// Don't bring in undefined values\n\t\t\t\t\t\t} else if (typeof copy !== 'undefined') {\n\t\t\t\t\t\t\ttarget[name] = copy;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\t// Return the modified object\n\t\treturn target;\n\t};\n\t\n\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar ErrorStackParser = __webpack_require__(6);\n\t\n\tvar UNKNOWN_FUNCTION = '?';\n\tvar ERR_CLASS_REGEXP = new RegExp('^(([a-zA-Z0-9-_$ ]*): *)?(Uncaught )?([a-zA-Z0-9-_$ ]*): ');\n\t\n\tfunction guessFunctionName() {\n\t  return UNKNOWN_FUNCTION;\n\t}\n\t\n\t\n\tfunction gatherContext() {\n\t  return null;\n\t}\n\t\n\t\n\tfunction Frame(stackFrame) {\n\t  var data = {};\n\t\n\t  data._stackFrame = stackFrame;\n\t\n\t  data.url = stackFrame.fileName;\n\t  data.line = stackFrame.lineNumber;\n\t  data.func = stackFrame.functionName;\n\t  data.column = stackFrame.columnNumber;\n\t  data.args = stackFrame.args;\n\t\n\t  data.context = gatherContext(data.url, data.line);\n\t\n\t  return data;\n\t}\n\t\n\t\n\tfunction Stack(exception) {\n\t  function getStack() {\n\t    var parserStack = [];\n\t\n\t    try {\n\t      parserStack = ErrorStackParser.parse(exception);\n\t    } catch(e) {\n\t      parserStack = [];\n\t    }\n\t\n\t    var stack = [];\n\t\n\t    for (var i = 0; i < parserStack.length; i++) {\n\t      stack.push(new Frame(parserStack[i]));\n\t    }\n\t\n\t    return stack;\n\t  }\n\t\n\t  return {\n\t    stack: getStack(),\n\t    message: exception.message,\n\t    name: exception.name\n\t  };\n\t}\n\t\n\t\n\tfunction parse(e) {\n\t  return new Stack(e);\n\t}\n\t\n\t\n\tfunction guessErrorClass(errMsg) {\n\t  if (!errMsg) {\n\t    return ['Unknown error. There was no error message to display.', ''];\n\t  }\n\t  var errClassMatch = errMsg.match(ERR_CLASS_REGEXP);\n\t  var errClass = '(unknown)';\n\t\n\t  if (errClassMatch) {\n\t    errClass = errClassMatch[errClassMatch.length - 1];\n\t    errMsg = errMsg.replace((errClassMatch[errClassMatch.length - 2] || '') + errClass + ':', '');\n\t    errMsg = errMsg.replace(/(^[\\s]+|[\\s]+$)/g, '');\n\t  }\n\t  return [errClass, errMsg];\n\t}\n\t\n\t\n\tmodule.exports = {\n\t  guessFunctionName: guessFunctionName,\n\t  guessErrorClass: guessErrorClass,\n\t  gatherContext: gatherContext,\n\t  parse: parse,\n\t  Stack: Stack,\n\t  Frame: Frame\n\t};\n\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (root, factory) {\n\t    'use strict';\n\t    // Universal Module Definition (UMD) to support AMD, CommonJS/Node.js, Rhino, and browsers.\n\t\n\t    /* istanbul ignore next */\n\t    if (true) {\n\t        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(7)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t    } else if (typeof exports === 'object') {\n\t        module.exports = factory(require('stackframe'));\n\t    } else {\n\t        root.ErrorStackParser = factory(root.StackFrame);\n\t    }\n\t}(this, function ErrorStackParser(StackFrame) {\n\t    'use strict';\n\t\n\t    var FIREFOX_SAFARI_STACK_REGEXP = /(^|@)\\S+\\:\\d+/;\n\t    var CHROME_IE_STACK_REGEXP = /^\\s*at .*(\\S+\\:\\d+|\\(native\\))/m;\n\t    var SAFARI_NATIVE_CODE_REGEXP = /^(eval@)?(\\[native code\\])?$/;\n\t\n\t    function _map(array, fn, thisArg) {\n\t        if (typeof Array.prototype.map === 'function') {\n\t            return array.map(fn, thisArg);\n\t        } else {\n\t            var output = new Array(array.length);\n\t            for (var i = 0; i < array.length; i++) {\n\t                output[i] = fn.call(thisArg, array[i]);\n\t            }\n\t            return output;\n\t        }\n\t    }\n\t\n\t    function _filter(array, fn, thisArg) {\n\t        if (typeof Array.prototype.filter === 'function') {\n\t            return array.filter(fn, thisArg);\n\t        } else {\n\t            var output = [];\n\t            for (var i = 0; i < array.length; i++) {\n\t                if (fn.call(thisArg, array[i])) {\n\t                    output.push(array[i]);\n\t                }\n\t            }\n\t            return output;\n\t        }\n\t    }\n\t\n\t    return {\n\t        /**\n\t         * Given an Error object, extract the most information from it.\n\t         * @param error {Error}\n\t         * @return Array[StackFrame]\n\t         */\n\t        parse: function ErrorStackParser$$parse(error) {\n\t            if (typeof error.stacktrace !== 'undefined' || typeof error['opera#sourceloc'] !== 'undefined') {\n\t                return this.parseOpera(error);\n\t            } else if (error.stack && error.stack.match(CHROME_IE_STACK_REGEXP)) {\n\t                return this.parseV8OrIE(error);\n\t            } else if (error.stack) {\n\t                return this.parseFFOrSafari(error);\n\t            } else {\n\t                throw new Error('Cannot parse given Error object');\n\t            }\n\t        },\n\t\n\t        /**\n\t         * Separate line and column numbers from a URL-like string.\n\t         * @param urlLike String\n\t         * @return Array[String]\n\t         */\n\t        extractLocation: function ErrorStackParser$$extractLocation(urlLike) {\n\t            // Fail-fast but return locations like \"(native)\"\n\t            if (urlLike.indexOf(':') === -1) {\n\t                return [urlLike];\n\t            }\n\t\n\t            var locationParts = urlLike.replace(/[\\(\\)\\s]/g, '').split(':');\n\t            var lastNumber = locationParts.pop();\n\t            var possibleNumber = locationParts[locationParts.length - 1];\n\t            if (!isNaN(parseFloat(possibleNumber)) && isFinite(possibleNumber)) {\n\t                var lineNumber = locationParts.pop();\n\t                return [locationParts.join(':'), lineNumber, lastNumber];\n\t            } else {\n\t                return [locationParts.join(':'), lastNumber, undefined];\n\t            }\n\t        },\n\t\n\t        parseV8OrIE: function ErrorStackParser$$parseV8OrIE(error) {\n\t            var filtered = _filter(error.stack.split('\\n'), function (line) {\n\t                return !!line.match(CHROME_IE_STACK_REGEXP);\n\t            }, this);\n\t\n\t            return _map(filtered, function (line) {\n\t                if (line.indexOf('(eval ') > -1) {\n\t                    // Throw away eval information until we implement stacktrace.js/stackframe#8\n\t                    line = line.replace(/eval code/g, 'eval').replace(/(\\(eval at [^\\()]*)|(\\)\\,.*$)/g, '');\n\t                }\n\t                var tokens = line.replace(/^\\s+/, '').replace(/\\(eval code/g, '(').split(/\\s+/).slice(1);\n\t                var locationParts = this.extractLocation(tokens.pop());\n\t                var functionName = tokens.join(' ') || undefined;\n\t                var fileName = locationParts[0] === 'eval' ? undefined : locationParts[0];\n\t\n\t                return new StackFrame(functionName, undefined, fileName, locationParts[1], locationParts[2], line);\n\t            }, this);\n\t        },\n\t\n\t        parseFFOrSafari: function ErrorStackParser$$parseFFOrSafari(error) {\n\t            var filtered = _filter(error.stack.split('\\n'), function (line) {\n\t                return !line.match(SAFARI_NATIVE_CODE_REGEXP);\n\t            }, this);\n\t\n\t            return _map(filtered, function (line) {\n\t                // Throw away eval information until we implement stacktrace.js/stackframe#8\n\t                if (line.indexOf(' > eval') > -1) {\n\t                    line = line.replace(/ line (\\d+)(?: > eval line \\d+)* > eval\\:\\d+\\:\\d+/g, ':$1');\n\t                }\n\t\n\t                if (line.indexOf('@') === -1 && line.indexOf(':') === -1) {\n\t                    // Safari eval frames only have function names and nothing else\n\t                    return new StackFrame(line);\n\t                } else {\n\t                    var tokens = line.split('@');\n\t                    var locationParts = this.extractLocation(tokens.pop());\n\t                    var functionName = tokens.shift() || undefined;\n\t                    return new StackFrame(functionName, undefined, locationParts[0], locationParts[1], locationParts[2], line);\n\t                }\n\t            }, this);\n\t        },\n\t\n\t        parseOpera: function ErrorStackParser$$parseOpera(e) {\n\t            if (!e.stacktrace || (e.message.indexOf('\\n') > -1 &&\n\t                e.message.split('\\n').length > e.stacktrace.split('\\n').length)) {\n\t                return this.parseOpera9(e);\n\t            } else if (!e.stack) {\n\t                return this.parseOpera10(e);\n\t            } else {\n\t                return this.parseOpera11(e);\n\t            }\n\t        },\n\t\n\t        parseOpera9: function ErrorStackParser$$parseOpera9(e) {\n\t            var lineRE = /Line (\\d+).*script (?:in )?(\\S+)/i;\n\t            var lines = e.message.split('\\n');\n\t            var result = [];\n\t\n\t            for (var i = 2, len = lines.length; i < len; i += 2) {\n\t                var match = lineRE.exec(lines[i]);\n\t                if (match) {\n\t                    result.push(new StackFrame(undefined, undefined, match[2], match[1], undefined, lines[i]));\n\t                }\n\t            }\n\t\n\t            return result;\n\t        },\n\t\n\t        parseOpera10: function ErrorStackParser$$parseOpera10(e) {\n\t            var lineRE = /Line (\\d+).*script (?:in )?(\\S+)(?:: In function (\\S+))?$/i;\n\t            var lines = e.stacktrace.split('\\n');\n\t            var result = [];\n\t\n\t            for (var i = 0, len = lines.length; i < len; i += 2) {\n\t                var match = lineRE.exec(lines[i]);\n\t                if (match) {\n\t                    result.push(new StackFrame(match[3] || undefined, undefined, match[2], match[1], undefined, lines[i]));\n\t                }\n\t            }\n\t\n\t            return result;\n\t        },\n\t\n\t        // Opera 10.65+ Error.stack very similar to FF/Safari\n\t        parseOpera11: function ErrorStackParser$$parseOpera11(error) {\n\t            var filtered = _filter(error.stack.split('\\n'), function (line) {\n\t                return !!line.match(FIREFOX_SAFARI_STACK_REGEXP) &&\n\t                    !line.match(/^Error created at/);\n\t            }, this);\n\t\n\t            return _map(filtered, function (line) {\n\t                var tokens = line.split('@');\n\t                var locationParts = this.extractLocation(tokens.pop());\n\t                var functionCall = (tokens.shift() || '');\n\t                var functionName = functionCall\n\t                        .replace(/<anonymous function(: (\\w+))?>/, '$2')\n\t                        .replace(/\\([^\\)]*\\)/g, '') || undefined;\n\t                var argsRaw;\n\t                if (functionCall.match(/\\(([^\\)]*)\\)/)) {\n\t                    argsRaw = functionCall.replace(/^[^\\(]+\\(([^\\)]*)\\)$/, '$1');\n\t                }\n\t                var args = (argsRaw === undefined || argsRaw === '[arguments not available]') ? undefined : argsRaw.split(',');\n\t                return new StackFrame(functionName, args, locationParts[0], locationParts[1], locationParts[2], line);\n\t            }, this);\n\t        }\n\t    };\n\t}));\n\t\n\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (root, factory) {\n\t    'use strict';\n\t    // Universal Module Definition (UMD) to support AMD, CommonJS/Node.js, Rhino, and browsers.\n\t\n\t    /* istanbul ignore next */\n\t    if (true) {\n\t        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t    } else if (typeof exports === 'object') {\n\t        module.exports = factory();\n\t    } else {\n\t        root.StackFrame = factory();\n\t    }\n\t}(this, function () {\n\t    'use strict';\n\t    function _isNumber(n) {\n\t        return !isNaN(parseFloat(n)) && isFinite(n);\n\t    }\n\t\n\t    function StackFrame(functionName, args, fileName, lineNumber, columnNumber, source) {\n\t        if (functionName !== undefined) {\n\t            this.setFunctionName(functionName);\n\t        }\n\t        if (args !== undefined) {\n\t            this.setArgs(args);\n\t        }\n\t        if (fileName !== undefined) {\n\t            this.setFileName(fileName);\n\t        }\n\t        if (lineNumber !== undefined) {\n\t            this.setLineNumber(lineNumber);\n\t        }\n\t        if (columnNumber !== undefined) {\n\t            this.setColumnNumber(columnNumber);\n\t        }\n\t        if (source !== undefined) {\n\t            this.setSource(source);\n\t        }\n\t    }\n\t\n\t    StackFrame.prototype = {\n\t        getFunctionName: function () {\n\t            return this.functionName;\n\t        },\n\t        setFunctionName: function (v) {\n\t            this.functionName = String(v);\n\t        },\n\t\n\t        getArgs: function () {\n\t            return this.args;\n\t        },\n\t        setArgs: function (v) {\n\t            if (Object.prototype.toString.call(v) !== '[object Array]') {\n\t                throw new TypeError('Args must be an Array');\n\t            }\n\t            this.args = v;\n\t        },\n\t\n\t        // NOTE: Property name may be misleading as it includes the path,\n\t        // but it somewhat mirrors V8's JavaScriptStackTraceApi\n\t        // https://code.google.com/p/v8/wiki/JavaScriptStackTraceApi and Gecko's\n\t        // http://mxr.mozilla.org/mozilla-central/source/xpcom/base/nsIException.idl#14\n\t        getFileName: function () {\n\t            return this.fileName;\n\t        },\n\t        setFileName: function (v) {\n\t            this.fileName = String(v);\n\t        },\n\t\n\t        getLineNumber: function () {\n\t            return this.lineNumber;\n\t        },\n\t        setLineNumber: function (v) {\n\t            if (!_isNumber(v)) {\n\t                throw new TypeError('Line Number must be a Number');\n\t            }\n\t            this.lineNumber = Number(v);\n\t        },\n\t\n\t        getColumnNumber: function () {\n\t            return this.columnNumber;\n\t        },\n\t        setColumnNumber: function (v) {\n\t            if (!_isNumber(v)) {\n\t                throw new TypeError('Column Number must be a Number');\n\t            }\n\t            this.columnNumber = Number(v);\n\t        },\n\t\n\t        getSource: function () {\n\t            return this.source;\n\t        },\n\t        setSource: function (v) {\n\t            this.source = String(v);\n\t        },\n\t\n\t        toString: function() {\n\t            var functionName = this.getFunctionName() || '{anonymous}';\n\t            var args = '(' + (this.getArgs() || []).join(',') + ')';\n\t            var fileName = this.getFileName() ? ('@' + this.getFileName()) : '';\n\t            var lineNumber = _isNumber(this.getLineNumber()) ? (':' + this.getLineNumber()) : '';\n\t            var columnNumber = _isNumber(this.getColumnNumber()) ? (':' + this.getColumnNumber()) : '';\n\t            return functionName + args + fileName + lineNumber + columnNumber;\n\t        }\n\t    };\n\t\n\t    return StackFrame;\n\t}));\n\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t__webpack_require__(9);\n\t\n\tvar browser = __webpack_require__(10);\n\t\n\tvar RollbarJSON = null;\n\t\n\tfunction setupJSON(JSON) {\n\t  RollbarJSON = JSON;\n\t}\n\t\n\tvar parseUriOptions = {\n\t  strictMode: false,\n\t    key: [\n\t    'source',\n\t    'protocol',\n\t    'authority',\n\t    'userInfo',\n\t    'user',\n\t    'password',\n\t    'host',\n\t    'port',\n\t    'relative',\n\t    'path',\n\t    'directory',\n\t    'file',\n\t    'query',\n\t    'anchor'\n\t  ],\n\t    q: {\n\t    name: 'queryKey',\n\t      parser: /(?:^|&)([^&=]*)=?([^&]*)/g\n\t  },\n\t  parser: {\n\t    strict: /^(?:([^:\\/?#]+):)?(?:\\/\\/((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\\/?#]*)(?::(\\d*))?))?((((?:[^?#\\/]*\\/)*)([^?#]*))(?:\\?([^#]*))?(?:#(.*))?)/,\n\t      loose: /^(?:(?![^:@]+:[^:@\\/]*@)([^:\\/?#.]+):)?(?:\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/\n\t  }\n\t};\n\t\n\t\n\tfunction typeName(obj) {\n\t  return ({}).toString.call(obj).match(/\\s([a-zA-Z]+)/)[1].toLowerCase();\n\t}\n\t\n\t\n\tfunction isType(obj, name) {\n\t  return typeName(obj) === name;\n\t}\n\t\n\t\n\tfunction parseUri(str) {\n\t  if (!isType(str, 'string')) {\n\t    throw new Error('received invalid input');\n\t  }\n\t\n\t  var o = parseUriOptions;\n\t  var m = o.parser[o.strictMode ? 'strict' : 'loose'].exec(str);\n\t  var uri = {};\n\t  var i = 14;\n\t\n\t  while (i--) {\n\t    uri[o.key[i]] = m[i] || '';\n\t  }\n\t\n\t  uri[o.q.name] = {};\n\t  uri[o.key[12]].replace(o.q.parser, function ($0, $1, $2) {\n\t    if ($1) {\n\t      uri[o.q.name][$1] = $2;\n\t    }\n\t  });\n\t\n\t  return uri;\n\t}\n\t\n\t\n\tfunction sanitizeUrl(url) {\n\t  var baseUrlParts = parseUri(url);\n\t  // remove a trailing # if there is no anchor\n\t  if (baseUrlParts.anchor === '') {\n\t    baseUrlParts.source = baseUrlParts.source.replace('#', '');\n\t  }\n\t\n\t  url = baseUrlParts.source.replace('?' + baseUrlParts.query, '');\n\t  return url;\n\t}\n\t\n\t\n\tfunction traverse(obj, func) {\n\t  var k;\n\t  var v;\n\t  var i;\n\t  var isObj = isType(obj, 'object');\n\t  var isArray = isType(obj, 'array');\n\t  var keys = [];\n\t\n\t  if (isObj) {\n\t    for (k in obj) {\n\t      if (obj.hasOwnProperty(k)) {\n\t        keys.push(k);\n\t      }\n\t    }\n\t  } else if (isArray) {\n\t    for (i = 0; i < obj.length; ++i) {\n\t      keys.push(i);\n\t    }\n\t  }\n\t\n\t  for (i = 0; i < keys.length; ++i) {\n\t    k = keys[i];\n\t    v = obj[k];\n\t    isObj = isType(v, 'object');\n\t    isArray = isType(v, 'array');\n\t    if (isObj || isArray) {\n\t      obj[k] = traverse(v, func);\n\t    } else {\n\t      obj[k] = func(k, v);\n\t    }\n\t  }\n\t\n\t  return obj;\n\t}\n\t\n\t\n\tfunction redact(val) {\n\t  val = String(val);\n\t  return new Array(val.length + 1).join('*');\n\t}\n\t\n\t\n\t// from http://stackoverflow.com/a/8809472/1138191\n\tfunction uuid4() {\n\t  var d = new Date().getTime();\n\t  var uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n\t    var r = (d + Math.random() * 16) % 16 | 0;\n\t    d = Math.floor(d / 16);\n\t    return (c === 'x' ? r : (r & 0x7 | 0x8)).toString(16);\n\t  });\n\t  return uuid;\n\t}\n\t\n\t\n\t// Modified version of Object.create polyfill from:\n\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/create\n\tfunction objectCreate(prototype) {\n\t  if (typeof Object.create != 'function') {\n\t    return ((function(undefined) {\n\t      var Temp = function() {};\n\t      return function (prototype) {\n\t        if(prototype !== null && prototype !== Object(prototype)) {\n\t          throw TypeError('Argument must be an object, or null');\n\t        }\n\t        Temp.prototype = prototype || {};\n\t        var result = new Temp();\n\t        Temp.prototype = null;\n\t\n\t        // to imitate the case of Object.create(null)\n\t        if(prototype === null) {\n\t           result.__proto__ = null;\n\t        }\n\t        return result;\n\t      };\n\t    })())(prototype);\n\t  } else {\n\t    return Object.create(prototype);\n\t  }\n\t}\n\t\n\t// IE8 logs objects as [object Object].  This is a wrapper that makes it a bit\n\t// more convenient by logging the JSON of the object.  But only do that in IE8 and below\n\t// because other browsers are smarter and handle it properly.\n\tfunction formatArgsAsString() {\n\t  var args = [];\n\t  for (var i=0; i < arguments.length; i++) {\n\t    var arg = arguments[i];\n\t    if (typeof arg === 'object') {\n\t      arg = RollbarJSON.stringify(arg);\n\t      if (arg.length > 500)\n\t        arg = arg.substr(0,500)+'...';\n\t    } else if (typeof arg === 'undefined') {\n\t      arg = 'undefined';\n\t    }\n\t    args.push(arg);\n\t  }\n\t  return args.join(' ');\n\t}\n\t\n\tfunction consoleError() {\n\t  if (browser.ieVersion() <= 8) {\n\t    console.error(formatArgsAsString.apply(null, arguments));\n\t  } else {\n\t    console.error.apply(null, arguments);\n\t  }\n\t}\n\t\n\tfunction consoleInfo() {\n\t  if (browser.ieVersion() <= 8) {\n\t    console.info(formatArgsAsString.apply(null, arguments));\n\t  } else {\n\t    console.info.apply(null, arguments);\n\t  }\n\t}\n\t\n\tfunction consoleLog() {\n\t  if (browser.ieVersion() <= 8) {\n\t    console.log(formatArgsAsString.apply(null, arguments));\n\t  } else {\n\t    console.log.apply(null, arguments);\n\t  }\n\t}\n\t\n\tvar Util = {\n\t  setupJSON: setupJSON,\n\t  isType: isType,\n\t  parseUri: parseUri,\n\t  parseUriOptions: parseUriOptions,\n\t  redact: redact,\n\t  sanitizeUrl: sanitizeUrl,\n\t  traverse: traverse,\n\t  typeName: typeName,\n\t  uuid4: uuid4,\n\t  objectCreate: objectCreate,\n\t  consoleError: consoleError,\n\t  consoleInfo: consoleInfo,\n\t  consoleLog: consoleLog\n\t};\n\t\n\t\n\tmodule.exports = Util;\n\n\n/***/ },\n/* 9 */\n/***/ function(module, exports) {\n\n\t// Console-polyfill. MIT license.\n\t// https://github.com/paulmillr/console-polyfill\n\t// Make it safe to do console.log() always.\n\t(function(global) {\n\t  'use strict';\n\t  if (!global.console) {\n\t    global.console = {};\n\t  }\n\t  var con = global.console;\n\t  var prop, method;\n\t  var dummy = function() {};\n\t  var properties = ['memory'];\n\t  var methods = ('assert,clear,count,debug,dir,dirxml,error,exception,group,' +\n\t     'groupCollapsed,groupEnd,info,log,markTimeline,profile,profiles,profileEnd,' +\n\t     'show,table,time,timeEnd,timeline,timelineEnd,timeStamp,trace,warn').split(',');\n\t  while (prop = properties.pop()) if (!con[prop]) con[prop] = {};\n\t  while (method = methods.pop()) if (!con[method]) con[method] = dummy;\n\t  // Using `this` for web workers & supports Browserify / Webpack.\n\t})(typeof window === 'undefined' ? this : window);\n\n\n/***/ },\n/* 10 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\t// This browser.js module is used to encapsulate any ugly browser/feature\n\t// detection we may need to do.\n\t\n\t// Figure out which version of IE we're using, if any.\n\t// This is gleaned from http://stackoverflow.com/questions/5574842/best-way-to-check-for-ie-less-than-9-in-javascript-without-library\n\t// Will return an integer on IE (i.e. 8)\n\t// Will return undefined otherwise\n\tfunction getIEVersion() {\n\t  var undef,\n\t    v = 3,\n\t    div = document.createElement('div'),\n\t    all = div.getElementsByTagName('i');\n\t\n\t  while (\n\t    div.innerHTML = '<!--[if gt IE ' + (++v) + ']><i></i><![endif]-->',\n\t      all[0]\n\t    );\n\t\n\t  return v > 4 ? v : undef;\n\t}\n\t\n\tvar Browser = {\n\t  ieVersion: getIEVersion\n\t};\n\t\n\tmodule.exports = Browser;\n\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t/* globals ActiveXObject */\n\t\n\tvar Util = __webpack_require__(8);\n\t\n\tvar RollbarJSON = null;\n\t\n\tfunction setupJSON(JSON) {\n\t  RollbarJSON = JSON;\n\t}\n\t\n\tfunction ConnectionError(message) {\n\t  this.name = 'Connection Error';\n\t  this.message = message;\n\t  this.stack = (new Error()).stack;\n\t}\n\t\n\tConnectionError.prototype = Util.objectCreate(Error.prototype);\n\tConnectionError.prototype.constructor = ConnectionError;\n\t\n\tvar XHR = {\n\t  XMLHttpFactories: [\n\t      function () {\n\t        return new XMLHttpRequest();\n\t      },\n\t      function () {\n\t        return new ActiveXObject('Msxml2.XMLHTTP');\n\t      },\n\t      function () {\n\t        return new ActiveXObject('Msxml3.XMLHTTP');\n\t      },\n\t      function () {\n\t        return new ActiveXObject('Microsoft.XMLHTTP');\n\t      }\n\t  ],\n\t  createXMLHTTPObject: function() {\n\t    var xmlhttp = false;\n\t    var factories = XHR.XMLHttpFactories;\n\t    var i;\n\t    var numFactories = factories.length;\n\t    for (i = 0; i < numFactories; i++) {\n\t      /* eslint-disable no-empty */\n\t      try {\n\t        xmlhttp = factories[i]();\n\t        break;\n\t      } catch (e) {\n\t        // pass\n\t      }\n\t      /* eslint-enable no-empty */\n\t    }\n\t    return xmlhttp;\n\t  },\n\t  post: function(url, accessToken, payload, callback) {\n\t    if (!Util.isType(payload, 'object')) {\n\t      throw new Error('Expected an object to POST');\n\t    }\n\t    payload = RollbarJSON.stringify(payload);\n\t    callback = callback || function() {};\n\t    var request = XHR.createXMLHTTPObject();\n\t    if (request) {\n\t      try {\n\t        try {\n\t          var onreadystatechange = function() {\n\t            try {\n\t              if (onreadystatechange && request.readyState === 4) {\n\t                onreadystatechange = undefined;\n\t\n\t                // TODO(cory): have the notifier log an internal error on non-200 response codes\n\t                var jsonResponse = RollbarJSON.parse(request.responseText);\n\t                if (request.status === 200) {\n\t                  callback(null, jsonResponse);\n\t                } else if (Util.isType(request.status, 'number') &&\n\t                  request.status >= 400 && request.status < 600) {\n\t\n\t                  if (request.status == 403) {\n\t                    // likely caused by using a server access token, display console message to let\n\t                    // user know\n\t                    Util.consoleError('[Rollbar]:' + jsonResponse.message);\n\t                  }\n\t                  // return valid http status codes\n\t                  callback(new Error(String(request.status)));\n\t                } else {\n\t                  // IE will return a status 12000+ on some sort of connection failure,\n\t                  // so we return a blank error\n\t                  // http://msdn.microsoft.com/en-us/library/aa383770%28VS.85%29.aspx\n\t                  callback(new ConnectionError('XHR response had no status code (likely connection failure)'));\n\t                }\n\t              }\n\t            } catch (ex) {\n\t              //jquery source mentions firefox may error out while accessing the\n\t              //request members if there is a network error\n\t              //https://github.com/jquery/jquery/blob/a938d7b1282fc0e5c52502c225ae8f0cef219f0a/src/ajax/xhr.js#L111\n\t              var exc;\n\t              if (ex && ex.stack) {\n\t                exc = ex;\n\t              } else {\n\t                exc = new Error(ex);\n\t              }\n\t              callback(exc);\n\t            }\n\t          };\n\t\n\t          request.open('POST', url, true);\n\t          if (request.setRequestHeader) {\n\t            request.setRequestHeader('Content-Type', 'application/json');\n\t            request.setRequestHeader('X-Rollbar-Access-Token', accessToken);\n\t          }\n\t          request.onreadystatechange = onreadystatechange;\n\t          request.send(payload);\n\t        } catch (e1) {\n\t          // Sending using the normal xmlhttprequest object didn't work, try XDomainRequest\n\t          if (typeof XDomainRequest !== 'undefined') {\n\t\n\t            // Assume we are in a really old browser which has a bunch of limitations:\n\t            // http://blogs.msdn.com/b/ieinternals/archive/2010/05/13/xdomainrequest-restrictions-limitations-and-workarounds.aspx\n\t\n\t            // If the current page is http, try and send over http\n\t            if (window.location.href.substring(0, 5) === 'http:' && url.substring(0, 5) === 'https') {\n\t              url = 'http' + url.substring(5);\n\t            }\n\t\n\t            var ontimeout = function() {\n\t              callback(new ConnectionError('Request timed out'));\n\t            };\n\t\n\t            var onerror = function() {\n\t              callback(new Error('Error during request'));\n\t            };\n\t\n\t            var onload = function() {\n\t              callback(null, RollbarJSON.parse(request.responseText));\n\t            };\n\t\n\t            request = new XDomainRequest();\n\t            request.onprogress = function() {};\n\t            request.ontimeout = ontimeout;\n\t            request.onerror = onerror;\n\t            request.onload = onload;\n\t            request.open('POST', url, true);\n\t            request.send(payload);\n\t          }\n\t        }\n\t      } catch (e2) {\n\t        callback(e2);\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\tmodule.exports = {\n\t  XHR: XHR,\n\t  setupJSON: setupJSON,\n\t  ConnectionError: ConnectionError\n\t};\n\n\n/***/ }\n/******/ ])\n});\n;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rollbar-browser/dist/rollbar.umd.nojson.js\n// module id = 172\n// module chunks = 1"],"sourceRoot":""}